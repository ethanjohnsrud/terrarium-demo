{"version":3,"sources":["useInterval.jsx","Verify.jsx","Settings/SettingsButton.jsx","Readings/Readings.jsx","Background/terrarium-buddies.jpg","Background/Background.jsx","Background/ScreenSaver/ScreenSaver.jsx","Menu/frog-logo.png","Menu/Menu.jsx","Control/Duration.jsx","Control/Control.jsx","Control/Schedule/Schedule.jsx","Climate/Climate.jsx","Readings/ErrorBar.jsx","Settings/SettingsList.jsx","Settings/SettingsBlank.jsx","Settings/Settings.jsx","Settings/Details/SensorTest.jsx","Settings/Details/LogView.jsx","History/History.jsx","App.js","reportWebVitals.js","index.js"],"names":["useInterval","callback","delay","limit","savedCallback","useRef","useEffect","current","id","setInterval","setTimeout","clearInterval","Verify","props","useState","input","setInput","seeText","setSeeText","style","position","zIndex","width","height","top","left","backgroundColor","display","flexDirection","justifyContent","alignItems","textAlign","padding","borderRadius","margin","prompt","autoFocus","gridColumn","border","color","type","onChange","e","target","value","onKeyPress","charCode","undefined","onSubmit","onClick","marginLeft","onCancel","SettingsButton","verification","setVerification","buttonText","setButtonText","verifyLevel","condense","pendingText","buttonColor","getButtonColor","makeRequest","password","a","localStorage","getItem","setItem","toString","onUpdate","success","isNaN","clear","processUpdate","overflow","className","buttonStyle","title","HoldButton","SERVER_URL","useSelector","root","serverURL","DATA","data","time","setTime","timeNextEvaluation","timer","setTimer","Date","getTime","holding","evaluationFrequency","Math","floor","fetchData","axios","post","PASSWORD","duration","then","response","catch","error","status","ERRORBACKGROUNDCOLOR","Readings","forwardRef","ref","nextCountDown","setNextCountDown","previousCountUp","setPreviousCountUp","sensorColor","setSensorColor","maxError","setMaxError","ERROR_LIST","setERROR_LIST","convertToFahrenheit","dispatch","useDispatch","routeHistory","useHistory","showDetails","hideDetails","getDefaultBackgroundColor","getTemperaturePercent","operatingTemperature","goal","goalTemperature","min","minimumTemperature","max","maximumTemperature","getHumidityPercent","operatingHumidity","goalHumidity","minimumHumidity","maximumHumidity","list","sensorErrorCode","push","maximumTemperatureErrorCode","minimumTemperatureErrorCode","maximumHumidityErrorCode","minimumHumidityErrorCode","accessDatabase","timeLastReading","previous","formatTemperature","temp","round","getSensor","gridRow","fontSize","fontFamily","statusMessage","length","match","reverse","map","m","i","overflowX","borderTop","dateFormat","getTemperature","align","columnGap","verticalAlign","getHumidity","marginRight","window","innerWidth","setAlign","temperatureSectionTop","document","getElementById","getBoundingClientRect","humiditySectionTop","HumidityOnClick","TemperatureOnClick","sensorOnClick","put","Background","IMAGE","image","src","location","defaultImage","alt","objectFit","opacity","visible","transition","TRANSITION_INTERVAL","TimeBar","countUp","setCountUp","bottom","whiteSpace","right","ScreenSaver","React","serverError","setServerError","isScreenSaverActive","showScreenSaver","setShowScreenSaver","screenSaverOpacity","setScreenSaverOpacity","screenSaverBrightness","calculateBrightness","setting","hour","options","blackHourStart","dayHourStart","dayOpacity","nightHourStart","nightOpacity","sort","b","console","log","screensaverTimer","resetTimer","deactivateScreenSaver","useCallback","clearTimeout","SCREENSAVER_INACTIVE_TIME","useImperativeHandle","isVisible","Menu","routeLocation","useLocation","textDecoration","pathname","icon","to","DURATION_LIST","name","getDurationName","v","places","parseInt","getDurationValue","cleanedValue","exec","label","MakeToggle","overridden","until","test","topReason","severe","borderColor","isSelected","select","active","Control","durationIndex","setDurationIndex","selectMode","setSelectMode","selectedList","setSelectedList","controlTypes","setControlTypes","smartIndex","findIndex","d","shortedNameList","names","y","CONTROLS","includes","types","result","forEach","join","substring","toUpperCase","scheduleNow","set","reason","JSON","stringify","repeat","event","c","settings","filter","minWidth","t","original","every","val","arr","DropMenu","customDefault","custom","setCustom","multipleList","setMultipleList","openList","dropListOpen","customName","inputType","selectMultiple","outerStyle","onFocus","onBlur","buttonStyleClass","payload","dropListId","subValue","borderBottom","marginTop","onSelect","option","extraList","extraName","onExtra","marginBottom","getDay","today","setHours","tomorrow","yesterday","day","getDate","getDateAbbreviation","getDateList","DropDateMenu","customDate","setCustomDate","getMonth","step","h","getHours","getMinutes","ScheduleRow","pendingAction","setPendingAction","priority","setPriority","setMinutes","setTitle","setNames","setDuration","setSet","setRepeat","resetVariables","insertNew","isControlsChanged","Array","isArray","isTimeChanged","isTitleChanged","isDurationChanged","isSetChanged","isRepeatChanged","isChanged","isControlsValid","isTimeValid","isTitleValid","isDurationValid","isSetValid","isRepeatValid","text","action","maxWidth","overriddenList","unshift","getUpdateOptions","space","replace","s","r","Schedule","SCHEDULES","setSCHEDULES","sortByTime","setSortByTime","calculatedList","setCalculatedList","fetchSchedules","get","schedules","days","minimum","end","count","occurrences","overrides","reduce","least","find","some","calculateOccurrenceList","getOverriddenList","schedule","index","currentPriority","increase","attributeName","Climate","CLIMATE","setCLIMATE","range","setRange","temperatureMode","setTemperatureMode","saveButtonText","setSaveButtonText","fetchClimate","climate","getMaxValue","format","ghost","ceil","getMinValue","getWidthOffset","parseFloat","getComputedStyle","documentElement","getRange","values","cellRatio","calculatedWidth","paddingLeft","paddingRight","j","item","temperature","toFixed","humidity","readOnly","temperatureAverage","humidityAverage","ADVANCED_PASSPHRASE","tag","ErrorBar","SettingsList","setCurrent","setOptions","setList","newCurrent","newOptions","addCustom","latestList","l","updateButton","toggleOption","latest","allowed","o","getOldOptions","gridTemplateColumns","old","SettingsBlank","setValue","numberStep","Settings","SCREENSAVER_BRIGHTNESS","route","body","onSuccess","LOCAL_SETTINGS","settingOptions","splice","emailStatusRecipients","emailIssueRecipients","email","message","updateRegularity","updateRegularityOptions","sensorType","sensorTypes","sensorMode","sensorModes","SensorTest","testingDuration","setTestingDuration","testingInterval","setTestingInterval","fetchingError","setFetchingError","interval","minutes","seconds","borderSpacing","split","p","colspan","LogView","fileName","setFileName","updateLog","headers","entry","History","dayList","setDayList","setClimate","getTemperatureOff","abs","getHumidityOff","updateHistory","fontWeight","inactive","App","screenSaverRef","addEventListener","onMouseMove","onWheel","exact","path","boxSizing","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialImage","IMAGE_INTERVAL","initialScreenSaverBrightness","allStateDomains","combineReducers","state","process","store","createStore","getState","start","origin","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.eb041d31.chunk.js","sourcesContent":["import {useEffect, useRef} from 'react';\r\n\r\n//Custom Hook : Interval for autoplay\r\nexport default function useInterval (callback, delay, limit) {\r\n    const savedCallback = useRef();\r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n    // Set up the interval.\r\n    useEffect(() => {\r\n      let id = setInterval(() => {\r\n        savedCallback.current();\r\n      }, delay);\r\n      if(limit) setTimeout(() => {clearInterval(id);}, limit);\r\n      return () => {clearInterval(id);}\r\n    }, [delay]);\r\n  }","import React, {useState} from 'react';\r\n\r\n\r\nconst Verify = (props) => {\r\n    const [input, setInput] = useState();\r\n    const [seeText, setSeeText] = useState(false);\r\n\r\n    return (<div id='verify-container' style={{position: 'fixed', zIndex: 35, width: '100vw', height: '100vh', top: 0, left:0, backgroundColor: 'rgba(0,0,0,0.9)', \r\n                                                display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\r\n        <div id='verify-inside' style={{position: 'relative', display: 'grid', textAlign: 'center', padding: '1.0rem 2.0rem', backgroundColor: 'var(--main-color)', borderRadius: '5px', }}>\r\n            <strong style={{margin: '0.5rem', width: '100%', textAlign: 'left'}}>{props.prompt}:</strong>\r\n            <div style={{display: 'grid', backgroundColor: 'black', borderRadius: '5px', padding: '0.25rem 0.5rem',}}>\r\n                <input autoFocus style={{gridColumn: 1, border: 'none', backgroundColor: 'black', color: 'whitesmoke'}} type={seeText ? 'text' : 'password'} onChange={(e)=>setInput(e.target.value)} onKeyPress={(e)=>{if(e.charCode == 13 && input != undefined && input != '') props.onSubmit(input);}}/>\r\n                <input type='checkbox'value={seeText} onClick={()=>setSeeText(!seeText)} style={{gridColumn: 2, border: 'none', color: 'var(--main-color)', height: '1.2rem', width: '1.2rem', marginLeft: '1.0rem'}} />\r\n            </div>\r\n            <div>\r\n                <button style={{border: '2px solid white', backgroundColor: 'var(--main-color)', color: 'black', padding: '0.25rem', margin: '0.5rem'}} onClick={()=>props.onCancel()}>CANCEL</button>\r\n                <button style={{border: 'none', backgroundColor: 'black', color: 'white', padding: '0.35rem', margin: '0.5rem'}} onClick={()=>{if(input != undefined && input != '') props.onSubmit(input);}}>SUBMIT</button>\r\n            </div>\r\n        </div>\r\n    </div>)\r\n}\r\nexport default Verify;","import React, {useState, useEffect} from 'react';\r\nimport { useSelector} from 'react-redux';\r\nimport axios from 'axios';\r\nimport useInterval from '../useInterval';\r\nimport Verify from '../Verify';\r\nimport {fetchData} from '../index';\r\n\r\nimport '../index.css';\r\nimport './Settings.css';\r\n\r\nconst SettingsButton = (props) => {\r\n    const [verification, setVerification] = useState(undefined);\r\n    const [buttonText, setButtonText] = useState('UPDATE');\r\n\r\n    //Guidelines Abstracted\r\n    const verifyLevel = (props.verifyLevel != undefined) ? props.verifyLevel : 1;\r\n    const condense = (props.condense != undefined) ? props.condense : false;\r\n    const pendingText = (props.pendingText != undefined) ? props.pendingText : 'PENDING';\r\n    const buttonColor = (props.buttonColor != undefined) ? props.buttonColor : 'var(--main-color)';\r\n    const getButtonColor=(buttonText)=>(buttonText=='UPDATE') ? buttonColor : (buttonText=='PASS' || buttonText=='INVALID' || buttonText=='FAILED') ? '#e8000d' : (buttonText=='PENDING' || buttonText=='BLANK') ? 'orange' : '#cc5500';\r\n\r\n    //*********************************\r\n    //   API REQUEST & VERIFICATION\r\n    //*********************************\r\n    const makeRequest=async(password)=>{ setVerification(undefined); //saving local until fetch up stream is called to replace data\r\n        if(verifyLevel == 1 && !localStorage.getItem(\"password\")) await localStorage.setItem(\"password\", password.toString());\r\n        const success = await props.onUpdate(password);\r\n        if(success == null || success == undefined) setButtonText('UPDATE');\r\n        else if(success == true || isNaN(success)) {setButtonText((success != true) ? success : 'SAVED'); setTimeout(()=>setButtonText('UPDATE'), 5000); }\r\n        else if(success == 401) { setButtonText('PASS'); setTimeout(()=>setButtonText('UPDATE'), 5000); localStorage.clear();}\r\n        else if(success == 404) { setButtonText('INVALID'); setTimeout(()=>setButtonText('UPDATE'), 5000); }\r\n        else {setButtonText('FAILED'); setTimeout(()=>setButtonText('UPDATE'), 5000);}\r\n    }\r\n\r\n    const processUpdate=()=>{ if(buttonText == 'UPDATE') { setButtonText('PENDING');\r\n        if(verifyLevel == 0) makeRequest(undefined); //No Security\r\n        else if(verifyLevel == 1 && !localStorage.getItem(\"password\")) setVerification('Enter Control Password to Continue:'); //Only Request if not stored\r\n        else if(verifyLevel == 1) makeRequest(localStorage.getItem(\"password\")); //Use Saved Password\r\n        else setVerification('Enter Advanced Passphrase to Proceed:'); //undefined || >1\r\n    }}\r\n    \r\n    //*********************************\r\n    //   HTML DISPLAY\r\n    //*********************************\r\n\r\n    return(<section style={{overflow: 'hidden'}}>\r\n        {(condense) ?   <button className={`settings-single-button`} onClick={()=>processUpdate()}  style={{...props.buttonStyle, overflow: 'hidden', backgroundColor: buttonColor}}>{props.title}\r\n                                <label className={`settings-single-button-overlay`} style={{display: buttonText == 'UPDATE' ? 'none' : 'flex', overflow: 'hidden', backgroundColor: getButtonColor(buttonText)}}>{buttonText}</label></button>\r\n        : <div className='settings-value-box' style={{display: (condense) ? 'block' : 'grid'}}>\r\n        <button className={`settings-single-button`} onClick={()=>processUpdate()}  style={{...props.buttonStyle, overflow: 'hidden', backgroundColor:  getButtonColor(buttonText)}}>{buttonText == 'UPDATE' ? props.title : buttonText == 'PENDING' ? pendingText : buttonText}</button>\r\n        </div>}\r\n        {verification ?\r\n            <Verify\r\n                prompt={verification}\r\n                onSubmit={makeRequest}\r\n                onCancel={()=>{setVerification(undefined); setButtonText('UPDATE');}}\r\n            />  : <div className='none no-size' style={{position:'absolute'}}></div>}\r\n    </section>);\r\n}\r\nexport default SettingsButton;\r\n\r\nexport const HoldButton = (props) => {\r\n    const SERVER_URL = useSelector(root => root.serverURL);\r\n    const DATA = useSelector(root => root.data);\r\n    const [time, setTime] = useState(0);\r\n    useEffect(()=>setTime(DATA.timeNextEvaluation),[DATA]);\r\n    const [timer, setTimer] = useState(0);\r\n    useInterval(()=>setTimer(time - new Date().getTime()), 1000);\r\n    const holding = (DATA.timeNextEvaluation > (new Date().getTime() + DATA.evaluationFrequency));\r\n\r\n    return (<SettingsButton title={`${holding ? 'HOLDING' : 'HOLD'}    -  ${(timer <= 0) ? 'evaluating' : `${(timer>3600000)?`${Math.floor(timer/3600000)}:`:''}${(timer>60000)?`${Math.floor((timer%3600000)/60000)}:`:''}${((timer>60000) && (timer%60000<10000))?'0':''}${Math.floor((timer%60000)/1000)}`}`}\r\n    condense={true}\r\n    buttonStyle={props.buttonStyle}\r\n    buttonColor={holding ? '#cc5500' : props.buttonColor}\r\n    verifyLevel={props.verifyLevel || 1}\r\n    onUpdate={(password)=>{setTimeout(()=>fetchData(), 5000); return axios.post(`${SERVER_URL}/postpone-evaluation/`, {PASSWORD: password, duration: props.duration || DATA.evaluationFrequency}).then((response)=>{setTime((props.duration || DATA.evaluationFrequency) + new Date().getTime());  return 'HOLDING';}).catch((error)=>error.response ? error.response.status : false);}} \r\n    />);\r\n}","import React, {useState, useEffect, forwardRef} from 'react';\r\nimport { useHistory} from \"react-router-dom\";\r\nimport { useSelector, useDispatch} from 'react-redux';\r\nimport axios from 'axios';\r\nimport dateFormat from 'dateformat';\r\nimport useInterval from '../useInterval';\r\nimport './Readings.css';\r\nimport '../index.css';\r\nimport SettingsButton from '../Settings/SettingsButton';\r\nimport { fetchData } from '..';\r\n\r\n\r\nconst BACKGROUNDCOLOR = 'rgba(24, 98, 24, 0.5)';\r\nconst ERRORBACKGROUNDCOLOR = 'darkred';\r\n\r\n\r\n const Readings = forwardRef((props, ref) => {\r\n    const [nextCountDown, setNextCountDown] = useState(0);\r\n    const [previousCountUp, setPreviousCountUp] = useState(0);\r\n    const [sensorColor, setSensorColor] = useState(BACKGROUNDCOLOR);\r\n    const [maxError, setMaxError] = useState(2);\r\n    const [ERROR_LIST, setERROR_LIST] = useState(['SERVER DISCONNECTED']);\r\n    const DATA = useSelector(root => root.data);\r\n    const SERVER_URL = useSelector(root => root.serverURL);\r\n    const convertToFahrenheit = useSelector(root => root.convertToFahrenheit);\r\n    const dispatch = useDispatch();\r\n    const routeHistory = useHistory();\r\n    \r\n    const showDetails = () => (props.hideDetails && maxError == 0) ? false : true;\r\n\r\n    const getDefaultBackgroundColor = () => showDetails() ? 'rgba(24, 98, 24, 0.85)' : 'rgba(24, 98, 24, 0.3)';\r\n\r\n    const getTemperaturePercent = (current = DATA.operatingTemperature, goal = DATA.goalTemperature, min = DATA.minimumTemperature, max = DATA.maximumTemperature) => (current >= max) ? 2 + ((current-max) * (1/(max-min))) : (current <= min) ? ((current-min) * (1/(max-min))) : 1 - ((goal-current) * (1/(max-min))); \r\n\r\n    const getHumidityPercent = (current = DATA.operatingHumidity, goal = DATA.goalHumidity, min = DATA.minimumHumidity, max = DATA.maximumHumidity) => (current >= max) ? 2 + ((current-max) * (1/(max-min))) : (current <= min) ? ((current-min) * (1/(max-min))) : 1 - ((goal-current) * (1/(max-min))); \r\n\r\n//Evaluate Current Errors //Error 0, 1, 2\r\n    useEffect(()=>{let max = 0; let list = [];\r\n        if(DATA.sensorErrorCode == undefined) {max = 2; list.push('SERVER DISCONNECTED');}\r\n        else {\r\n            if(DATA.sensorErrorCode) {max = Math.max(max, DATA.sensorErrorCode); list.push('SENSOR ERROR');}\r\n            if(DATA.maximumTemperatureErrorCode) {max = Math.max(max, DATA.maximumTemperatureErrorCode); list.push('MAXIMUM TEMPERATURE');}\r\n            if(DATA.minimumTemperatureErrorCode) {max = Math.max(max, DATA.minimumTemperatureErrorCode); list.push('MINIMUM TEMPERATURE');}\r\n            if(DATA.maximumHumidityErrorCode) {max = Math.max(max, DATA.maximumHumidityErrorCode); list.push('MAXIMUM HUMIDITY');}\r\n            if(DATA.minimumHumidityErrorCode) {max = Math.max(max, DATA.minimumHumidityErrorCode); list.push('MINIMUM HUMIDITY');}\r\n            if((DATA.accessDatabase != undefined && !DATA.accessDatabase)) {max = Math.max(max, 1); list.push('DATABASE BLOCKED');}\r\n        } setMaxError(max); setERROR_LIST(list);\r\n    },[DATA]);\r\n\r\n    useInterval(()=>{setNextCountDown(DATA.timeNextEvaluation - new Date().getTime()); setPreviousCountUp(new Date().getTime() - DATA.timeLastReading)\r\n                    setSensorColor(previous => (maxError == 1 || previous == 'whitesmoke') ? ERRORBACKGROUNDCOLOR : (maxError > 1) ? 'whitesmoke' : getDefaultBackgroundColor()); \r\n    }, 1000);\r\n\r\n    const formatTemperature = (temp) => convertToFahrenheit ? (Math.round(((temp*(9/5)+32)) * 100) / 100) : temp;\r\n\r\n\r\n    const getSensor = () => (DATA.operatingTemperature && !showDetails()) ? <div className='none no-size'></div>\r\n        : <div id='condition-details' className='none readings-box-outer' style={{}}>\r\n            <div className='readings-box-inner' style={{backgroundColor: sensorColor}}>\r\n                <div className=' readings-value-box' >\r\n                    <strong className=' ' style={{gridRow: 1, gridColumn: 1, fontSize: '4.0rem', fontFamily: `'New Tegomin', serif`}} >\r\n                        {(maxError || !DATA.operatingTemperature)  ? 'SYSTEM ERROR' : ''}\r\n                    </strong>\r\n                    {(DATA.statusMessage && DATA.statusMessage.length) ?  <div style={{display: 'inline-grid', gridRow: 2, gridColumn: 1,}}>\r\n                    {DATA.statusMessage.match(/[^\\r\\n]+/g).reverse().map((m, i)=>\r\n                            <p key={`statusMessage-${i}`} className=' ' style={{gridRow: (i+1), gridColumn: 1, overflowX: 'auto', fontSize: '1.4rem', fontFamily: `'New Tegomin', serif`, margin: 0}} >{m}</p>\r\n                        )} </div> : <div className='none no-size'></div>}\r\n                    {ERROR_LIST.map((e,i)=><strong key={`error-${i}`} className=' ' style={{gridRow: (i+3), gridColumn: 1, overflowX: 'auto', fontSize: '1.2rem', fontFamily: `'New Tegomin', serif`, margin: 0, color: sensorColor == ERRORBACKGROUNDCOLOR ? 'white' : ERRORBACKGROUNDCOLOR}} >{e}</strong>)}\r\n                </div>\r\n                {(DATA.operatingTemperature) ? <section className='readings-value-box'>\r\n                    <div id='readings-sensor-spacer-line' className='none' style={{gridRow: 1, gridColumn: '1 / span 2', width: '80%', height:'0', margin: '0.75rem auto', borderTop: '1px solid black'}}></div>\r\n                    <p className='none readings-description' style={{gridRow: 2, gridColumn: 1,}} >Last Sensor Reading:</p>\r\n                    <strong className='none readings-value' style={{gridRow: 2, gridColumn: 2, }} >{dateFormat(DATA.timeLastReading, 'm-d-yy HH:MM')}{previousCountUp > DATA.evaluationFrequency ? ` [${`${(previousCountUp>3600000)?`${Math.floor(previousCountUp/3600000)}:`:''}${(previousCountUp>60000)?`${Math.floor((previousCountUp%3600000)/60000)}:`:''}${((previousCountUp>60000) && (previousCountUp%60000<10000))?'0':''}${Math.floor((previousCountUp%60000)/1000)}`}]`: ''}</strong>\r\n                    <p className='none readings-description' style={{gridRow: 3, gridColumn: 1, }} >Sensor Frequency:</p>\r\n                    <strong className='none readings-value' style={{gridRow: 3, gridColumn: 2, }} >{DATA.evaluationFrequency/60000} minutes</strong>\r\n                    <p className='none readings-description' style={{gridRow: 4, gridColumn: 1,  }} >Next Evaluation:</p>\r\n                    <strong className='none readings-value' style={{gridRow: 4, gridColumn: 2, }} >{nextCountDown <= 0 ? 'Reading' : nextCountDown > 60000 ? `${Math.floor(nextCountDown/60000)}:${nextCountDown%60000<10000?'0':''}${Math.floor((nextCountDown%60000)/1000)}` : `${Math.floor(nextCountDown/1000)} seconds`}</strong>\r\n                </section> : <div  className='none no-size'></div>}\r\n            </div>\r\n        </div>;\r\n\r\n    const getTemperature = () => (DATA.operatingTemperature) ? <div id='temperature-section' className='none readings-box-outer' style={{marginLeft: align ? 'auto' : 0}}>\r\n            <div className='readings-box-inner' style={{backgroundColor: maxError ? ERRORBACKGROUNDCOLOR : getDefaultBackgroundColor()}}>\r\n                <section className='none readings-value-box' style={{columnGap: '0'}}>\r\n                        <strong className='none readings-main-value' style={{}} >{formatTemperature(DATA.operatingTemperature)}</strong>\r\n                        <p className='none ' style={{gridRow: 1, gridColumn: 2, verticalAlign: 'top', fontSize: '1.0rem'}} >{convertToFahrenheit ? <span>&#8457;</span> : <span>&#8451;</span>}</p>\r\n                    </section>\r\n                {!showDetails() ? <div className='none no-size'></div> \r\n                : <section className='readings-value-box'>\r\n                        <p className='none readings-title' style={{}} >Temperature</p>\r\n                        <p className='none readings-description' style={{gridRow: 2, gridColumn: 1, }} >Efficiency:</p>\r\n                        <strong className='none readings-value' style={{gridRow: 2, gridColumn: 2, }} >{Math.floor(getTemperaturePercent()*100)}%</strong>\r\n                        <p className='none readings-description' style={{gridRow: 3, gridColumn: 1, }} >Range:</p>\r\n                        <strong className='none readings-value' style={{gridRow: 3, gridColumn: 2, }} >{formatTemperature(DATA.minimumTemperature)} - {formatTemperature(DATA.maximumTemperature)}{convertToFahrenheit ? <span>&#8457;</span> : <span>&#8451;</span>}</strong>\r\n                </section> }     \r\n            </div>     \r\n        </div> : <div id='temperature-section' className='none no-size'></div>;\r\n\r\n\r\n    const getHumidity = () => (DATA.operatingHumidity) ? <div id='humidity-section'  className='none readings-box-outer' style={{marginRight: align ? 'auto' : '0'}}>\r\n            <div className='readings-box-inner' style={{backgroundColor: maxError ? ERRORBACKGROUNDCOLOR : getDefaultBackgroundColor()}}>\r\n                <section className='none readings-value-box' style={{columnGap: '0'}}>\r\n                    <strong className='none readings-main-value' style={{}} >{Math.round(DATA.operatingHumidity * 100) / 100}</strong>\r\n                    <p className='none ' style={{gridRow: 1, gridColumn: 2, verticalAlign: 'top', fontSize: '1.0rem'}} >%</p>\r\n                </section>\r\n                {!showDetails() ? <div className='none no-size'></div> \r\n                : <section className='readings-value-box'>\r\n                    <p className='none readings-title' style={{textAlign: 'center'}} >Humidity</p>\r\n                    <p className='none readings-description' style={{gridRow: 2, gridColumn: 1, }} >Efficiency:</p>\r\n                    <strong className='none readings-value' style={{gridRow: 2, gridColumn: 2, }} >{Math.floor(getHumidityPercent()*100)}%</strong>\r\n                    <p className='none readings-description' style={{gridRow: 3, gridColumn: 1, }} >Range:</p>\r\n                    <strong className='none readings-value' style={{gridRow: 3, gridColumn: 2, }} >{(DATA.minimumHumidity)} - {(DATA.maximumHumidity)}%</strong>\r\n                </section> }\r\n            </div> \r\n        </div> : <div id='humidity-section' className='none no-size'></div>;\r\n\r\n//Detect flew-wrap and center horizontally\r\nconst [align, setAlign] = useState((window.innerWidth < 900));\r\nuseEffect(()=>{setTimeout(()=>{\r\n    const temperatureSectionTop = document.getElementById('temperature-section').getBoundingClientRect().top;\r\n    const humiditySectionTop = document.getElementById('humidity-section').getBoundingClientRect().top;\r\n    if(temperatureSectionTop != undefined && temperatureSectionTop != humiditySectionTop) setAlign(true);\r\n},500);},[]);    \r\n\r\nconst HumidityOnClick = async(password) => {const response = await fetchData(); routeHistory.push('/'); return response == true ? 'UPDATING' : response;}\r\nconst TemperatureOnClick = async(password) => {dispatch({type: 'toggleConvertToFahrenheit'}); return null;}\r\nconst sensorOnClick = async(password) => {if(DATA.sensorErrorCode == undefined) routeHistory.push('/settings'); else if(maxError) routeHistory.push('/log'); else if(showDetails()) {setTimeout(()=>fetchData(), 60000); return await axios.put(`${SERVER_URL}/evaluate/`, {PASSWORD: password}).then((response)=>'EVALUATING').catch((error)=>error.response ? error.response.status : false);} return null;}\r\n\r\n    return (align ? <div ref={ref} id='readings-container' className='readings-align'  >\r\n                <SettingsButton title={getSensor()}\r\n                    condense={true}\r\n                    buttonColor={'transparent'}\r\n                    buttonStyle={{border: 'none', margin: '1.0rem', padding: '0', borderRadius: '0.75rem'}}\r\n                    verifyLevel={maxError ? 0 : 1}\r\n                    pendingText='INITIATING'\r\n                    onUpdate = {sensorOnClick}/>\r\n                <SettingsButton title={getTemperature()}\r\n                    condense={true}\r\n                    buttonColor={'transparent'}\r\n                    buttonStyle={{border: 'none', margin: '1.0rem', padding: '0', borderRadius: '0.75rem'}}\r\n                    verifyLevel={0}\r\n                    onUpdate = {TemperatureOnClick}/>\r\n                <SettingsButton title={getHumidity()}\r\n                    condense={true}\r\n                    buttonColor={'transparent'}\r\n                    buttonStyle={{border: 'none', margin: '1.0rem', padding: '0', borderRadius: '0.75rem'}}\r\n                    verifyLevel={0}\r\n                    pendingText='RETRIEVING'\r\n                    onUpdate={HumidityOnClick}/>\r\n        </div> : <div ref={ref} id='readings-container' className='readings-top'  >\r\n                <SettingsButton title={getTemperature()}\r\n                    condense={true}\r\n                    buttonColor={'transparent'}\r\n                    buttonStyle={{border: 'none', margin: '1.0rem', padding: '0', borderRadius: '0.75rem'}}\r\n                    verifyLevel={0}\r\n                    onUpdate = {TemperatureOnClick}/>\r\n                <SettingsButton title={getSensor()}\r\n                    condense={true}\r\n                    buttonColor={'transparent'}\r\n                    buttonStyle={{border: 'none', margin: '1.0rem', padding: '0', borderRadius: '0.75rem'}}\r\n                    verifyLevel={maxError ? 0 : 1}\r\n                    pendingText='INITIATING'\r\n                    onUpdate = {sensorOnClick}/>\r\n                <SettingsButton title={getHumidity()}\r\n                    condense={true}\r\n                    buttonColor={'transparent'}\r\n                    buttonStyle={{border: 'none', margin: '1.0rem', padding: '0', borderRadius: '0.75rem'}}\r\n                    verifyLevel={0}\r\n                    pendingText='RETRIEVING'\r\n                    onUpdate={HumidityOnClick}/>\r\n        </div>);\r\n});\r\n\r\nexport default Readings;","export default __webpack_public_path__ + \"static/media/terrarium-buddies.3158d65c.jpg\";","import { useSelector} from 'react-redux';\r\nimport defaultImage from './terrarium-buddies.jpg';\r\nimport '../index.css';\r\nimport './Background.css';\r\n\r\n\r\nconst Background = (props) => {\r\n\r\n  const IMAGE = useSelector(root => root.image);\r\n\r\nreturn(\r\n    <div key='Background Component'>\r\n      <div key='background-black' style={{\r\n        position: 'absolute', \r\n        zIndex: 0,\r\n        height:'100vh', \r\n        width: '100vw', \r\n        backgroundColor: 'black'\r\n        }}></div>\r\n      <div key='Background Image' style={{position: 'absolute',  }}>\r\n        {/* <div key='background-cover' style={{\r\n        position: 'absolute', \r\n          zIndex: '3',\r\n          height:'100vh', \r\n          width: '100vw', \r\n          backgroundColor: 'black',\r\n          opacity: 0.4,\r\n\r\n          }}></div> */}\r\n        <img  className=\"blur-effect\" src={IMAGE.location || defaultImage} alt={'background-image'}  style={{\r\n          zIndex: '2',\r\n          display: 'block',\r\n          objectFit: 'cover',\r\n          overflow: 'hidden',\r\n          width: '100vw', \r\n          height: '100vh', \r\n          opacity: IMAGE.visible ? 0.9 : 0.3, \r\n          transition: `all ${IMAGE.TRANSITION_INTERVAL*0.6}ms ease`}}/>\r\n        \r\n      </div>\r\n    </div>\r\n);\r\n}\r\nexport default Background;","import React, {useState, useCallback, useEffect, useRef, useImperativeHandle} from 'react';\r\nimport { useHistory} from \"react-router-dom\";\r\nimport { useSelector, useDispatch} from 'react-redux';\r\nimport dateFormat from 'dateformat';\r\nimport useInterval from '../../useInterval';\r\nimport defaultImage from '../terrarium-buddies.jpg';\r\nimport '../../index.css';\r\n\r\nimport Readings from '../../Readings/Readings';\r\n\r\n\r\nconst TimeBar = (props) => {\r\n  const DATA = useSelector(root => root.data);\r\n\r\n  const [countUp, setCountUp] = useState(0);\r\n  useInterval(()=>{setCountUp((new Date().getTime() - DATA.timeLastReading));},1000);\r\n\r\n  return(<div className='none border-box' style={{position: 'fixed', bottom: 0, width: '100%', \r\n    padding: '0.3rem 1.0rem', \r\n    display: 'flex', justifyContent: 'space-between',\r\n    backgroundColor: 'black', color: 'whitesmoke', fontSize: '0.8rem', whiteSpace: 'wrap', overflowX: 'scroll',\r\n  }}>\r\n      <p className='none' style={{whiteSpace: 'nowrap', left: 0}} >{dateFormat(new Date().getTime(), 'dddd, mmmm d, yyyy h:MM')}</p>\r\n      <p className='none' style={{whiteSpace: 'nowrap', right: '100vw'}} >{isNaN(countUp) ? 'Disconnected' : countUp > 60000 ? `${Math.floor(countUp/60000)}:${countUp%60000<10000?'0':''}${Math.floor((countUp%60000)/1000)}` : `${Math.floor(countUp/1000)} seconds`}</p>\r\n  </div>);\r\n}\r\n\r\nconst ScreenSaver = React.forwardRef((props, ref) => {\r\n//  Detection & Timeout: https://codesandbox.io/s/5xrrr09r9k?file=/src/index.js:480-1530\r\n\r\nconst IMAGE = useSelector(root => root.image);\r\nconst DATA = useSelector(root => root.data);\r\nconst [serverError, setServerError] = useState(false);\r\nconst isScreenSaverActive = useSelector(root => root.isScreenSaverActive);\r\nconst [showScreenSaver, setShowScreenSaver] = useState(true);\r\nconst [screenSaverOpacity, setScreenSaverOpacity] = useState('0'); //CSS Inline String\r\nuseEffect(()=>{if(isScreenSaverActive && !serverError) {\r\n    // setScreenSaverOpacity('0');\r\n    setShowScreenSaver(true);\r\n    setTimeout(() => setScreenSaverOpacity('1'), ( 0.6*1000));\r\n  } else {\r\n    // setScreenSaverOpacity('1');\r\n    setTimeout(() => setScreenSaverOpacity('0'), ( 0.6*1000));\r\n    setTimeout(() => setShowScreenSaver(false), (1000));\r\n  }}, [isScreenSaverActive, serverError]);\r\nconst screenSaverBrightness = useSelector(root => root.screenSaverBrightness);\r\nconst dispatch = useDispatch();\r\nconst routeHistory = useHistory();\r\n\r\nconst calculateBrightness = () => { if(screenSaverBrightness.setting == 'Black') return 1.0;\r\n    if(screenSaverBrightness.setting == 'Scheduled') { const hour = 19;\r\n    let options=[{hour: screenSaverBrightness.blackHourStart, opacity: 0}, {hour: screenSaverBrightness.dayHourStart, opacity: screenSaverBrightness.dayOpacity}, {hour: screenSaverBrightness.nightHourStart, opacity:screenSaverBrightness.nightOpacity}];\r\n    options = options.sort((a,b) => (a.hour-b.hour));\r\n    console.log(options);\r\n    if((hour >= options[0].hour) && ((hour < options[1].hour) || (options[0].hour == options[1].hour)) && (options[0].hour >= 0 && options[0].hour <= 23)) return options[0].opacity;\r\n    if((hour >= options[1].hour) && ((hour < options[2].hour) || (options[1].hour == options[2].hour)) && (options[1].hour >= 0 && options[1].hour <= 23)) return options[1].opacity;\r\n    if((hour >= options[2].hour) || (hour < options[0].hour) && (options[2].hour >= 0 && options[2].hour <= 23)) return options[2].opacity;\r\n    }\r\n    return 1.0; //Default\r\n}\r\n\r\n//Evaluate Current Errors\r\n  useEffect(()=>{ const list = [];\r\n    if((DATA.sensorErrorCode == undefined) \r\n        || (DATA.sensorErrorCode) \r\n        || (DATA.maximumTemperatureErrorCode) \r\n        || (DATA.minimumTemperatureErrorCode) \r\n        || (DATA.maximumHumidityErrorCode) \r\n        || (DATA.minimumHumidityErrorCode) \r\n        || (DATA.accessDatabase != undefined && !DATA.accessDatabase)) setServerError(true);\r\n    else setServerError(false);\r\n  },[DATA]);\r\n\r\n//Screen Saver\r\nconst screensaverTimer = useRef();\r\nconst resetTimer = useRef();\r\nconst deactivateScreenSaver = useCallback((duration) => {\r\n  dispatch({type: 'deactivateScreenSaver'});\r\n    //Set Timer\r\n    clearTimeout(screensaverTimer.current);\r\n    screensaverTimer.current = setTimeout(() => dispatch({type: 'activateScreenSaver' }), duration || IMAGE.SCREENSAVER_INACTIVE_TIME);\r\n    clearTimeout(resetTimer.current);\r\n    if(isScreenSaverActive) resetTimer.current = setTimeout(()=>routeHistory.push('/'), (duration || IMAGE.SCREENSAVER_INACTIVE_TIME)*3);\r\n  }, []);\r\n  useEffect(()=>deactivateScreenSaver(),[]); //call initially\r\n\r\n      //Allows Parent: App.js to call on all mouse movements\r\n      useImperativeHandle(ref, () => ({\r\n        deactivateScreenSaver() {\r\n          deactivateScreenSaver();\r\n        }\r\n      }));\r\n    \r\nreturn((!showScreenSaver) ? <div className='none no-size'></div> : \r\n    <div key='ScreenSaver Component' style={{zIndex: 20,\r\n      position: 'absolute',\r\n      width: '100vw',\r\n      height: '100vh',\r\n      opacity: screenSaverOpacity,\r\n      transition: `all ${IMAGE.TRANSITION_INTERVAL*0.5}ms ease`\r\n    }}\r\n    // onClick={()=>deactivateScreenSaver()}\r\n    // onMouseMove={()=>deactivateScreenSaver()}\r\n    // onMouseLeave={()=>dispatch({type: 'activateScreenSaver' })}\r\n    >\r\n      <div key='ScreenSaver-black' style={{\r\n        position: 'absolute', \r\n        // zIndex: '0',\r\n        height:'100vh', \r\n        width: '100vw', \r\n        backgroundColor: 'black'\r\n        }}></div>\r\n      <div key='ScreenSaver Image' style={{position: 'absolute',  }}>\r\n        <img  className=\"\" src={IMAGE.location || defaultImage} alt={'screensaver'}  style={{\r\n          // zIndex: '9',\r\n          display: 'block',\r\n          objectFit: 'cover',\r\n          overflow: 'hidden',\r\n          width: '100vw', \r\n          height: '100vh', \r\n          opacity: IMAGE.isVisible ? calculateBrightness() : (calculateBrightness() > 0.2) ? 0.2 : 0,\r\n          transition: `all ${IMAGE.TRANSITION_INTERVAL*0.6}ms ease`}}/>\r\n      </div>\r\n          <Readings hideDetails={true}/>\r\n          <TimeBar />\r\n    </div>\r\n);\r\n\r\n});\r\n\r\nexport default ScreenSaver;","export default __webpack_public_path__ + \"static/media/frog-logo.61394956.png\";","\r\nimport React, {forwardRef} from 'react';\r\nimport { Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport '../index.css';\r\nimport './Menu.css';\r\nimport icon from './frog-logo.png';\r\n\r\n\r\nconst Menu = forwardRef((props, ref) => {\r\n    const routeHistory = useHistory();\r\n    const routeLocation = useLocation();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    return(<div>\r\n        <div id='menu-container-spacer'></div>\r\n        <div ref={ref} id='menu-container' className=' border-box' >\r\n            <div className='menu-icon-box' style={{ textDecoration: 'none' }} onClick={()=>{\r\n                if(routeLocation.pathname == '/') setTimeout(()=>dispatch({type: 'activateScreenSaver' }), 1500);\r\n                else routeHistory.push('/');\r\n            }}>\r\n                    <img className='menu-icon' src={icon} />\r\n                    <strong className='menu-icon-text'>Current</strong>\r\n            </div>\r\n            <Link to=\"/controls\" className='menu-icon-box' style={{ textDecoration: 'none' }}>\r\n                    <img className='menu-icon' src={icon} />\r\n                    <strong className='menu-icon-text'>Controls</strong>\r\n            </Link>\r\n            <Link to=\"/schedules\" className='menu-icon-box' style={{ textDecoration: 'none' }}>\r\n                <img className='menu-icon' src={icon} />\r\n                <strong className='menu-icon-text'>Schedules</strong>\r\n            </Link>\r\n            <Link to=\"/climate\" className='menu-icon-box' style={{ textDecoration: 'none' }}>\r\n                <img className='menu-icon' src={icon} />\r\n                <strong className='menu-icon-text'>Climate</strong>\r\n            </Link>\r\n            <Link to=\"/history\" className='menu-icon-box' style={{ textDecoration: 'none' }}>\r\n                <img className='menu-icon' src={icon} />\r\n                <strong className='menu-icon-text'>History</strong>\r\n            </Link>\r\n            <div className='menu-icon-box' style={{ textDecoration: 'none' }} onClick={()=>{\r\n                if(routeLocation.pathname == '/settings') routeHistory.push('/log');\r\n                else routeHistory.push('/settings');\r\n            }}>\r\n                    <img className='menu-icon' src={icon} />\r\n                <strong className='menu-icon-text'>Settings</strong>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n});\r\n\r\nexport default Menu;","\r\nconst DURATION_LIST = [ //return in millisecond and interpret slider\r\n    {name: '1m', value: 1 * 60 * 1000},\r\n    {name: '2m', value: 2 * 60 * 1000},\r\n    {name: '3m', value: 3 * 60 * 1000},\r\n    {name: '4m', value: 4 * 60 * 1000},\r\n    {name: '5m', value: 5 * 60 * 1000},\r\n    {name: '6m', value: 6 * 60 * 1000},\r\n    {name: '7m', value: 7 * 60 * 1000},\r\n    {name: '8m', value: 8 * 60 * 1000},\r\n    {name: '9m', value: 9 * 60 * 1000},\r\n    {name: '10m', value: 10 * 60 * 1000},\r\n    {name: '15m', value: 15 * 60 * 1000},\r\n    {name: '30m', value: 30 * 60 * 1000},\r\n    {name: '45m', value: 45 * 60 * 1000},\r\n    {name: '1h', value: 60 * 60 * 1000},\r\n    {name: '2h', value: 2 * 60 * 60 * 1000},\r\n    {name: '3h', value: 3 * 60 * 60 * 1000},\r\n    {name: '4h', value: 4 * 60 * 60 * 1000},\r\n    {name: '5h', value: 5 * 60 * 60 * 1000},\r\n    {name: '6h', value: 6 * 60 * 60 * 1000},\r\n    {name: '12h', value: 12 * 60 * 60 * 1000},\r\n    {name: '1d', value: 24 * 60 * 60 * 1000},\r\n    {name: '3d', value: 3 * 24 * 60 * 60 * 1000},\r\n    {name: '1w', value: 7 * 24 * 60 * 60 * 1000},\r\n    {name: '2w', value: 14 * 24 * 60 * 60 * 1000},\r\n    {name: '1M', value: 30 * 24 * 60 * 60 * 1000},\r\n];\r\n\r\nexport default DURATION_LIST;\r\n\r\nexport const getDurationName = (v, places = 1) => {\r\n    try{const value = parseInt(v);\r\n            if((value / (30 * 24 * 60 * 60 * 1000)) >= 1) return `${Math.floor(value / (30 * 24 * 60 * 60 * 1000) * (places * 10))/(places * 10)}M`;\r\n            else if((value / (7 * 24 * 60 * 60 * 1000)) >= 1) return `${Math.floor(value / (7 * 24 * 60 * 60 * 1000) * (places * 10))/(places * 10)}w`;\r\n            else if((value / (24 * 60 * 60 * 1000)) >= 1) return `${Math.floor(value / (24 * 60 * 60 * 1000) * (places * 10))/(places * 10)}d`;\r\n            else if((value / (60 * 60 * 1000)) >= 1) return `${Math.floor(value / (60 * 60 * 1000) * (places * 10))/(places * 10)}h`;\r\n            else if((value / (60 * 1000)) >= 1) return `${Math.floor(value / (60 * 1000))}m`;\r\n            else return 'ZERO';\r\n    } catch(error){return 'INVALID';}\r\n}\r\n\r\nexport const getDurationValue = (name) => {\r\n    try{ const cleanedValue = /\\d+/.exec(name)[0];\r\n        const value = parseInt(cleanedValue);\r\n        const label = /[a-zA-Z]+/.exec(name)[0];\r\n\r\n        if(label == 'm') return value * 60 * 1000;\r\n        else if(label == 'h')  return value * 60 * 60 * 1000;\r\n        else if(label == 'd')  return value * 24 * 60 * 60 * 1000;\r\n        else if(label == 'w')  return value * 7 * 24 * 60 * 60 * 1000;\r\n        else if(label == 'M')  return value * 30 * 24 * 60 * 60 * 1000;\r\n        else return value;\r\n    } catch(error){return 0;}\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { useSelector} from 'react-redux';\r\nimport axios from 'axios';\r\nimport useInterval from '../useInterval';\r\nimport DURATION_LIST from './Duration';\r\nimport SettingsButton, {HoldButton} from '../Settings/SettingsButton';\r\nimport {fetchData} from '../index';\r\n\r\nimport '../index.css';\r\nimport './Control.css';\r\n\r\nconst ACTIVE_COLOR = 'rgba(0, 102, 0, 0.6)';\r\nconst DEACTIVE_COLOR = 'rgba(0, 0, 0, 0.5)';\r\n\r\n//auto generate type button\r\n\r\nconst MakeToggle = (props) => {\r\n    const [timer, setTimer] = useState(1);\r\n    const interval = useInterval(()=>{setTimer((props.until - new Date().getTime()) * (((props.until - new Date().getTime()) < 0) ? -1 : 1)); }, 1000);\r\n    const overridden = /(severe|schedule|toggle|immediate)/i.test(props.topReason);\r\n    const severe = /(severe|extreme)/i.test(props.topReason);\r\n\r\n    return (\r\n    <div className='none control-toggle-outer' style={{}} onClick={props.onClick}> \r\n        <div className='none control-toggle-inner' style={{borderColor: props.isSelected ? 'whitesmoke' : props.select ? 'transparent' : overridden ? 'var(--accent-color)' : 'transparent',\r\n                backgroundColor: severe ? 'darkred' : props.active ? ACTIVE_COLOR : DEACTIVE_COLOR, }}>\r\n            <strong className='none control-toggle-text'>{props.title}</strong>\r\n            <p className='none control-toggle-timer' style={{}} >{props.topReason}</p>\r\n            <p className='none control-toggle-timer' style={{fontSize: '0.75rem', color: ((props.until - new Date().getTime()) < 0) ? 'gold' : null}} >{(props.until <= 0) ? `${props.active ? 'ON' : 'OFF'} : INDEFINITELY` : `${(timer>3600000)?`${Math.floor(timer/3600000)}:`:''}${(timer>60000)?`${Math.floor((timer%3600000)/60000)}:`:''}${((timer>60000) && (timer%60000<10000))?'0':''}${Math.floor((timer%60000)/1000)}` }</p>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\nexport default function Control(props) {\r\n    const SERVER_URL = useSelector(root => root.serverURL);\r\n    const DATA = useSelector(root => root.data);\r\n    const [durationIndex, setDurationIndex] = useState(10)\r\n    const [selectMode, setSelectMode] = useState(false);\r\n    const [selectedList, setSelectedList] = useState([]);\r\n    const [controlTypes, setControlTypes] = useState([]);\r\n    useEffect(()=>{if(DATA.controlTypes != undefined) setControlTypes(DATA.controlTypes);\r\n                const smartIndex = DURATION_LIST.findIndex(d=>(d.value > (DATA.timeNextEvaluation - new Date().getTime())))-1;  \r\n                if(smartIndex > 0) setDurationIndex(smartIndex); },[DATA]);\r\n\r\n    const shortedNameList = (names) => {  \r\n        for(var i=0; i<DATA.controlTypes.length; i++) {let match = true;\r\n            for(var y=0; y<DATA.CONTROLS.length; y++) {\r\n                if((names.includes(DATA.CONTROLS[y].name) && !DATA.CONTROLS[y].types.includes(DATA.controlTypes[i]))\r\n                    || !names.includes(DATA.CONTROLS[y].name) && DATA.CONTROLS[y].types.includes(DATA.controlTypes[i])) { match = false; break;}\r\n            } if(match) return `[${DATA.controlTypes[i]}]`;\r\n        } let result = '';\r\n         names.forEach(name =>  result += ('-'+(name.match(/\\b(\\w)/g).join('.'))));\r\n        return `(${result.substring(1).toUpperCase()})`;//removes first dash :)\r\n    }\r\n\r\n    const scheduleNow = async(password, names, set = true, reason = `Immediate ${shortedNameList(names)}`) =>  await axios.post(`${SERVER_URL}/schedule-add/`, {\r\n                                PASSWORD: password, time: new Date().getTime(), title: reason, names: JSON.stringify(names), duration: DURATION_LIST[durationIndex].value, set: (set || set == 'true'), repeat: 0\r\n                            }).then((response) => {setTimeout(()=>fetchData(),4000); return 'EXECUTING';}).catch((error) => error.response ? error.response.status : false);\r\n\r\n    return(\r\n        <div id='control-container'>\r\n            <div id='duration-box' >\r\n                <label id='duration-label' style={{color:'white'}} onClick={()=>setDurationIndex(10)}>{DURATION_LIST[durationIndex].name}</label>\r\n                <input id='duration-slider' type='range' min={0} max ={DURATION_LIST.length-1} value={durationIndex} onChange={(event) => setDurationIndex(event.target.value)} />\r\n            </div>\r\n            <div id='control-box'>\r\n                {DATA.CONTROLS === undefined ? <div></div> :\r\n                DATA.CONTROLS.map((c) => <SettingsButton key={c.name} \r\n                    title={\r\n                        <MakeToggle \r\n                            title={c.name} \r\n                            active= {(c.settings[0].set || c.settings[0].set == 'true')}\r\n                            topReason= {c.settings[0].reason}\r\n                            until= {c.settings[0].until}\r\n                            select={selectMode}\r\n                            isSelected = {selectedList.includes(c.name)}\r\n                            onClick={()=>{}}\r\n        \r\n                        />}\r\n                    pendingText='SCHEDULING'\r\n                    condense={true}\r\n                    buttonColor={'transparent'}\r\n                    buttonStyle={{border: 'none', margin: '1.0rem', padding: '0', width: '15.0rem'}}\r\n                    verifyLevel={1}\r\n                    onUpdate = {(password) =>  {if(selectMode) {(selectedList.includes(c.name) ? setSelectedList((list) => [...list.filter(name => name !== c.name)]) : setSelectedList((list) => [...list, c.name])); return null;}\r\n                            else return scheduleNow(password, [c.name], !(c.settings[0].set || (c.settings[0].set == 'true')), `Toggle ${shortedNameList([c.name])}`)}}/>)\r\n                    }\r\n            </div>\r\n                <div id='control-select-box'>\r\n                    <SettingsButton title='ALL'\r\n                        pendingText='ACTIVATING'\r\n                        condense={true}\r\n                        buttonColor={'rgba(0, 0, 0, 0.95)'}\r\n                        buttonStyle={{border: 'none', padding: '0.70rem 2rem', fontSize: '0.9rem', width: 'auto', minWidth: '6.0rem', borderRadius: '0.5rem'}}\r\n                        verifyLevel={1}\r\n                        onUpdate={(password)=>selectMode ? setSelectedList([...DATA.CONTROLS.map(c=>c.name)]) : scheduleNow(password, [...DATA.CONTROLS.map(c=>c.name)], true, 'ALL ON')} />\r\n                    <SettingsButton title='ACTIVE'\r\n                        pendingText='SCHEDULING'\r\n                        condense={true}\r\n                        buttonColor={'rgba(0, 0, 0, 0.95)'}\r\n                        buttonStyle={{border: 'none', padding: '0.70rem 2rem', fontSize: '0.9rem', width: 'auto', minWidth: '6.0rem', borderRadius: '0.5rem'}}\r\n                        verifyLevel={1}\r\n                        onUpdate={(password)=>selectMode ? setSelectedList([...DATA.CONTROLS.filter((c)=>c.settings[0].set).map(c=>c.name)]) : scheduleNow(password, [...DATA.CONTROLS.filter((c)=>c.settings[0].set).map(c=>c.name)], false, 'DEACTIVATING')} />\r\n                    <SettingsButton title='INACTIVE'\r\n                        pendingText='SCHEDULING'\r\n                        condense={true}\r\n                        buttonColor={'rgba(0, 0, 0, 0.95)'}\r\n                        buttonStyle={{border: 'none', padding: '0.70rem 2rem', fontSize: '0.9rem', width: 'auto', minWidth: '6.0rem', borderRadius: '0.5rem'}}\r\n                        verifyLevel={1}\r\n                        onUpdate={(password)=>selectMode ? setSelectedList([...DATA.CONTROLS.filter((c)=>!c.settings[0].set).map(c=>c.name)]) : scheduleNow(password, [...DATA.CONTROLS.filter((c)=>!c.settings[0].set).map(c=>c.name)], true, 'ACTIVATING')} />\r\n                    {controlTypes.map((t,i)=><SettingsButton key={t} title={t}\r\n                        pendingText='SCHEDULING'\r\n                        condense={true}\r\n                        buttonColor={'rgba(0, 0, 0, 0.95)'}\r\n                        buttonStyle={{border: 'none', padding: '0.70rem 2rem', fontSize: '0.9rem', width: 'auto',  minWidth: '6.0rem', borderRadius: '0.5rem'}}\r\n                        verifyLevel={1}\r\n                        onUpdate={(password)=>selectMode ? setSelectedList(original => [...DATA.CONTROLS.filter((c)=>c.types.includes(t)).map(c=>c.name)].every((val, i, arr) => selectedList.includes(val)) \r\n                                    ? [...DATA.CONTROLS.filter((c)=>(!c.types.includes(t) && original.includes(t))).map(c=>c.name)] \r\n                                    : [...DATA.CONTROLS.filter((c)=>c.types.includes(t)).map(c=>c.name)]) \r\n                                    : scheduleNow(password, [...DATA.CONTROLS.filter((c)=>c.types.includes(t)).map(c=>c.name)], \r\n                                        ([...DATA.CONTROLS.filter((c)=>c.types.includes(t))].every((val, i, arr) => val.settings[0].set == arr[0].settings[0].set) && [...DATA.CONTROLS.filter((c)=>c.types.includes(t))].length)\r\n                                        ? ![...DATA.CONTROLS.filter((c)=>c.types.includes(t))][0].settings[0].set : true, `Immediate ${t}`)} />)}\r\n                     <SettingsButton title='NONE'\r\n                        pendingText='DEACTIVATING'\r\n                        condense={true}\r\n                        buttonColor={'rgba(0, 0, 0, 0.95)'}\r\n                        buttonStyle={{border: 'none', padding: '0.70rem 2rem', fontSize: '0.9rem', width: 'auto', minWidth: '6.0rem', borderRadius: '0.5rem'}}\r\n                        verifyLevel={1}\r\n                        onUpdate={(password)=>selectMode ? setSelectedList([]) : scheduleNow(password, [...DATA.CONTROLS.map(c=>c.name)], false, 'ALL OFF')} />\r\n                </div>\r\n            {selectMode ? \r\n                <div id='control-select-box'>\r\n                    <SettingsButton title='ON'\r\n                        pendingText='ACTIVATING'\r\n                        condense={true}\r\n                        // buttonColor={'rgba(255, 255, 255, 0.5)'}\r\n                        buttonStyle={{border: 'none', padding: '0.45rem 2rem', width: 'auto',  minWidth: '6.0rem', borderRadius: '0.5rem', color: 'black'}}\r\n                        verifyLevel={1}\r\n                        onUpdate={(password)=>scheduleNow(password, selectedList, true)} />\r\n                    <SettingsButton title='OFF'\r\n                        pendingText='DEACTIVATING'\r\n                        condense={true}\r\n                        // buttonColor={'rgba(255, 255, 255, 0.5)'}\r\n                        buttonStyle={{border: 'none', padding: '0.45rem 2rem', width: 'auto', minWidth: '6.0rem', borderRadius: '0.5rem', color: 'black'}}\r\n                        verifyLevel={1}\r\n                        onUpdate={(password)=>scheduleNow(password, selectedList, false)} />\r\n                    <button className='none control-button control-button-exit' onClick={()=>{setSelectMode(false); setSelectedList([]);}}>Exit</button>\r\n                    {/* <button className='none control-button' onClick={()=>{}}>Schedule</button> */}\r\n                </div>\r\n                : <div id='control-select-box'>\r\n                    <button className='none control-button' onClick={()=>setSelectMode(true)}>Select</button>\r\n                </div>\r\n            }\r\n            <HoldButton duration={DURATION_LIST[durationIndex].value} verifyLevel={(DURATION_LIST[durationIndex].value < (24*60*60*1000)) ? 1 : 2} buttonStyle={{padding: '0.4rem'}}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React, {useState,  useEffect} from 'react';\r\nimport { useSelector, useDispatch} from 'react-redux';\r\nimport axios from 'axios';\r\nimport dateFormat from 'dateformat';\r\nimport DURATION_LIST, {getDurationName, getDurationValue} from '../Duration';\r\nimport SettingsButton, {HoldButton} from '../../Settings/SettingsButton';\r\nimport Verify from '../../Verify';\r\n\r\nimport '../../index.css';\r\nimport './Schedule.css';\r\n\r\nconst getButtonColor=(buttonText)=> (buttonText=='UPDATE' || buttonText=='') ? 'var(--main-color)' : (buttonText=='PASS' || buttonText=='INVALID' || buttonText=='FAILED') ? '#e8000d' : (buttonText=='PENDING' || buttonText=='BLANK') ? 'orange' : '#cc5500';\r\n\r\nconst DropMenu = (props) => {\r\n    const [custom, setCustom] = useState(props.customDefault);\r\n    const [multipleList, setMultipleList] = useState(props.multipleList);\r\n    const openList = useSelector(root => root.dropListOpen);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{setMultipleList(props.multipleList);},[props.multipleList]); //Syncing single selection with custom\r\n    useEffect(()=>{setCustom(props.customDefault);},[props.customDefault]); //Syncing single selection with custom\r\n\r\n\r\n    //Guidelines Abstracted\r\n    const buttonColor = (props.buttonColor != undefined) ? props.buttonColor : '';\r\n    const customName = (props.customName != undefined) ? props.customName : false;\r\n    const inputType = (props.inputType != undefined) ? props.inputType : 'text';\r\n    const selectMultiple = (multipleList != undefined);\r\n\r\n    return(<div className='schedule-drop-menu-container' style={props.outerStyle} onFocus={()=>{}} onBlur={()=>{}} >\r\n        <button className={`schedule-input schedule-drop-menu-button ${props.buttonStyleClass || ''}`} style={{color: (isNaN(props.value)) ? 'white' : buttonColor, backgroundColor: (isNaN(props.value)) ? buttonColor : null}} onClick={()=>dispatch({type: 'setDropList', payload: props.dropListId})}>{(props.value != undefined) ? props.value : (props.multipleList != undefined) ? props.multipleList.toString() : ''}{props.subValue ? <span><label style={{color: 'grey', margin: '0 0.5rem'}}>|</label><label style={{color: 'orange'}}>{props.subValue || ''}</label></span> : null}</button>\r\n        {(openList == props.dropListId) ? <div className='schedule-drop-menu-list' style={{top: props.options.length <= 5 ? null : '5vh'}}>\r\n                    <button key='cancel-button' className='schedule-drop-menu-item' style={{borderBottom: '1px solid whitesmoke', color: 'var(--main-color)'}} onClick={()=>{\r\n                                dispatch({type: 'setDropList'});\r\n                            }}>Cancel</button>\r\n            {selectMultiple ? <button key='save-button-1' className='schedule-drop-menu-item schedule-save-button' style={{borderBottom: '1px solid whitesmoke', marginTop: 0}} onClick={()=>{\r\n                        props.onSelect(multipleList);\r\n                        dispatch({type: 'setDropList'});\r\n                    }}>SAVE</button>:<div className='none no-size'></div>}\r\n                {props.options.map((option, i) => \r\n                    <button key={`${option}-${JSON.stringify(multipleList)}`} className='schedule-drop-menu-item' style={{ border: (selectMultiple ? multipleList.includes(option) : props.value == option) ? '1px solid var(--main-color)' : 'none', backgroundColor: (option == 'UPDATE') ? 'var(--main-color)' : (option == 'DELETE') ? 'red' : '',  color: (option == 'UPDATE') ? 'white' : (option == 'DELETE') ? 'black' : ''}} onClick={()=>{\r\n                        if(selectMultiple && multipleList.includes(option)) setMultipleList(multipleList.filter(m => m != option));\r\n                        else if(selectMultiple) setMultipleList([...multipleList, option]);\r\n                        else { props.onSelect(option);\r\n                        dispatch({type: 'setDropList'});\r\n                    }}}>{option}</button>\r\n                )}\r\n                {(props.extraList && selectMultiple) ? <button key='save-button-2' className='schedule-drop-menu-item schedule-save-button' style={{borderTop: '1px solid whitesmoke', borderBottom: '1px solid whitesmoke'}} onClick={()=>{\r\n                        props.onSelect(multipleList);\r\n                        dispatch({type: 'setDropList'});\r\n                    }}>{props.extraName || 'SAVE'}</button>:<div className='none no-size'></div>}\r\n                {props.extraList ? props.extraList.map((option, i) => \r\n                    <button key={`${option}-${JSON.stringify(multipleList)}`} className='schedule-drop-menu-item' style={{border: (selectMultiple ? multipleList.includes(option) : props.value == option) ? '1px solid var(--main-color)' : 'none', backgroundColor: (option == 'UPDATE') ? 'var(--main-color)' : (option == 'DELETE') ? 'red' : '',  color: (option == 'UPDATE') ? 'white' : (option == 'DELETE') ? 'black' : ''}} onClick={()=>{\r\n                        props.onExtra(option);\r\n                        dispatch({type: 'setDropList'});\r\n                    }}>{option}</button>\r\n                ) : null}\r\n                {customName ? <div className='none' style={{display:'inline-grid', gridColumn: 1}}>\r\n                        <input key='settings-add-input' type={inputType} className='schedule-drop-menu-item' style={{gridColumn: 1, width: '10.0rem', border: 'none', borderRadius: 0, border: '1px solid whitesmoke', backgroundColor: 'black', color: 'white'}} \r\n                            value={custom}\r\n                            onChange={(c)=>setCustom(c.target.value)}\r\n                            onKeyPress={(e)=>{ if (e.charCode == 13) {\r\n                                props.onSelect(selectMultiple ? [...multipleList, custom] : custom);\r\n                                dispatch({type: 'setDropList'});\r\n                            }}}/>\r\n                        <button key='settings-add-button' className='schedule-drop-menu-item' style={{gridColumn: 2, border: 'none', borderRadius: 0, borderBottom: '1px solid whitesmoke', backgroundColor: 'whitesmoke', color: 'black'}} onClick={()=>{\r\n                                props.onSelect(selectMultiple ? [...multipleList, custom] : custom);\r\n                                dispatch({type: 'setDropList'});\r\n                            }}>{customName}</button>\r\n                </div> : <div className='none no-size'></div>}\r\n                {selectMultiple ? <button key='save-button-3' className='schedule-save-button schedule-drop-menu-item ' style={{borderTop: '1px solid whitesmoke', marginBottom: 0}} onClick={()=>{\r\n                        props.onSelect(multipleList);\r\n                        dispatch({type: 'setDropList'});\r\n                    }}>SAVE</button>:<div className='none no-size'></div>}\r\n            </div>\r\n        : <div ></div>}\r\n    </div>);\r\n}\r\nconst getDateAbbreviation = (t) => {const time = parseInt(t) || 0;\r\n    const day = new Date(time).getDate(); \r\n    if(day == 1 || day == 21 || day == 31) return `${dateFormat(time, 'mmm')}, ${day}st`;\r\n    else if(day == 2 || day == 22) return `${dateFormat(time, 'mmm')}, ${day}nd`;\r\n    else if(day == 3 || day == 23) return `${dateFormat(time, 'mmm')}, ${day}rd`;\r\n    else return `${dateFormat(time, 'mmm')}, ${day}th`;\r\n}\r\n//labels yesterday, today, tomorrow, within week (sunday); otherwise date with abbreviation\r\nconst getDay = (t) => { const time = parseInt(t) || 0; let today = new Date(); today.setHours(0,0,0,0); const tomorrow = new Date(today.getTime()+(24*60*60*1000)); const yesterday = new Date(today.getTime()-(24*60*60*1000)); \r\n    if(time >= today.getTime() && time < tomorrow.getTime()) return `Today`;\r\n    if(time >= tomorrow.getTime() && time < (new Date(tomorrow.getTime()+(24*60*60*1000)).getTime())) return `Tomorrow`;\r\n    if(time >= (new Date(yesterday.getTime()-(24*60*60*1000)).getTime()) && time < today.getTime()) return `Yesterday`;\r\n    if(time >= (new Date(today.getTime()-(6*24*60*60*1000)).getTime()) && time <= (new Date(today.getTime()+(7*24*60*60*1000)).getTime())) {\r\n        const day = new Date(time).getDay();    \r\n        return day == 0 ? 'Sunday' : day == 1 ? 'Monday' : day == 2 ? 'Tuesday' : day == 3 ? 'Wednesday' : day == 4 ? 'Thursday' : day == 5 ? 'Friday' : day == 6 ? 'Saturday' : 'New Day';\r\n    } else return getDateAbbreviation(time);\r\n}\r\nconst getDateList = () => { const list = [];\r\n        let time = new Date(); time = time.setHours(7,0,0,0); \r\n        for(var i=(0); i<(30); i++){  list.push(time); time += (24*60*60*1000);  }\r\n        return list;\r\n    }\r\nconst DropDateMenu = (props) => {\r\n    const openList = useSelector(root => root.dropListOpen);\r\n    const [customDate, setCustomDate] = useState(props.time);\r\n    // const [customTime, setCustomTime] = useState((props.time % (24*60*60*1000))/(60000)); //Handle Time Locally below in <input/>\r\n    // useEffect(()=>{setCustomDate(props.time); setCustomTime(props.time % (24*60*60*1000));}, [props.time])\r\n    const dispatch = useDispatch();\r\n    return(<div className='schedule-drop-menu-container' style={props.outerStyle} onFocus={()=>{}} onBlur={()=>{}} >\r\n        <button className={`schedule-input schedule-drop-menu-button ${props.buttonStyleClass || ''}`} onClick={()=>dispatch({type: 'setDropList', payload: props.dropListId})}>{`${getDay(props.time)} ${dateFormat(parseInt(props.time) || 0, 'H:MM')}`}</button>\r\n        {(openList == props.dropListId) ? <div className='schedule-drop-date-menu' style={{}} >\r\n                <div className='schedule-drop-menu-list' style={{top: '5vh', gridRow: 1, gridColumn: 1, left: '2.0rem'}}>         \r\n                    <label key='cancel-button' className='schedule-drop-menu-item' style={{gridRow: (1), borderBottom: '1px solid whitesmoke', color: 'var(--main-color)'}} onClick={()=>{\r\n                               dispatch({type: 'setDropList'});\r\n                            }}>Cancel</label>  \r\n                    {getDateList().map((t, i) => \r\n                        <label key={t} className='schedule-drop-menu-item' style={{gridRow: (i+2), border: ((new Date(props.time).getMonth() == (new Date(t).getMonth())) && (new Date(props.time).getDate() == (new Date(t).getDate()))) ? '1px solid var(--main-color)' : 'none'}} onClick={()=>{\r\n                            props.onSelect(t);\r\n                            // dispatch({type: 'setDropList'});\r\n                        }}>{getDay(t)}</label>)}\r\n                    <div className='none' style={{display:'inline-grid', gridColumn: 1}}>\r\n                        <input key='settings-add-input' type='number' step={24*60*60*1000} className='schedule-drop-menu-item' style={{gridColumn: 1, width: '10.0rem', border: 'none', borderRadius: 0, border: '1px solid whitesmoke', backgroundColor: 'black', color: 'white'}} \r\n                            value={customDate}\r\n                            onChange={(c)=>setCustomDate(c.target.value)}\r\n                            onKeyPress={(e)=>{ if (e.charCode == 13) {\r\n                                props.onSelect(customDate);\r\n                                dispatch({type: 'setDropList'});\r\n                            }}}/>\r\n                        <button key='settings-add-button' className='schedule-drop-menu-item' style={{gridColumn: 2, border: 'none', borderRadius: 0, borderBottom: '1px solid whitesmoke', backgroundColor: 'whitesmoke', color: 'black'}} onClick={()=>{\r\n                                props.onSelect(customDate);\r\n                                dispatch({type: 'setDropList'});\r\n                            }}>EPOCH</button>\r\n                    </div>\r\n                </div>\r\n                <div className='schedule-drop-menu-list' style={{top: '5vh', gridRow: 1, gridColumn: 1, right: '2.0rem'}}>  \r\n                        <label key='cancel-button' className='schedule-drop-menu-item' style={{gridRow: (1), borderBottom: '1px solid whitesmoke', color: 'var(--main-color)'}} onClick={()=>{\r\n                                dispatch({type: 'setDropList'});\r\n                            }}>Cancel</label>               \r\n                    {[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24].map((h, i) => \r\n                        <label key={h} className='schedule-drop-menu-item' style={{gridRow: (i+2), border: (new Date(props.time).getHours() == (h)) ? '1px solid var(--main-color)' : 'none'}} onClick={()=>{\r\n                            props.onSelect(new Date(props.time).setHours(h,0,0,0)); setCustomDate(new Date(props.time).setHours(h,0,0,0));\r\n                            dispatch({type: 'setDropList'});\r\n                        }}>{h} : 00</label>)}\r\n                        <div className='none' style={{display:'inline-grid', gridColumn: 1}}>\r\n                        <input key='settings-add-input' type='number' step={60} className='schedule-drop-menu-item' style={{gridColumn: 1, width: '10.0rem', border: 'none', borderRadius: 0, border: '1px solid whitesmoke', backgroundColor: 'black', color: 'white'}} \r\n                            value={(new Date(customDate).getHours()*60) + (new Date(customDate).getMinutes())}\r\n                            onChange={(c)=>setCustomDate(new Date(props.time).setHours(0,(c.target.value),0,0))}\r\n                            onKeyPress={(e)=>{ if (e.charCode == 13) {\r\n                                props.onSelect(customDate);\r\n                                dispatch({type: 'setDropList'});\r\n                            }}}/>\r\n                        <button key='settings-add-button' className='schedule-drop-menu-item' style={{gridColumn: 2, border: 'none', borderRadius: 0, borderBottom: '1px solid whitesmoke', backgroundColor: 'whitesmoke', color: 'black'}} onClick={()=>{\r\n                                props.onSelect(customDate);\r\n                                dispatch({type: 'setDropList'});\r\n                            }}>Time (m)</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        : <div ></div>}\r\n    </div>);\r\n}\r\n\r\nconst ScheduleRow = (props) => {\r\n    const DATA = useSelector(root => root.data);   \r\n    const dispatch = useDispatch(); \r\n    const [pendingAction, setPendingAction] = useState(undefined);\r\n    const [verification, setVerification] = useState(undefined);\r\n    const [buttonText, setButtonText] = useState('');\r\n\r\n    const [priority, setPriority] = useState(props.priority || null);\r\n    const [time, setTime] = useState(props.time || new Date().setMinutes(0,0,0));\r\n    const [title, setTitle] = useState(props.title || '');\r\n    const [names, setNames] = useState(props.names || []);\r\n    const [duration, setDuration] = useState(props.duration || (15*60*1000));\r\n    const [set, setSet] = useState(props.set || true);\r\n    const [repeat, setRepeat] = useState(props.repeat || 0);\r\n\r\n    const resetVariables = (clear = false) => { \r\n        setPriority(props.priority || null);\r\n        setTime((clear || props.time == undefined) ? new Date().setMinutes(0,0,0) : props.time);\r\n        setTitle((clear || props.title == undefined) ? '' : props.title);\r\n        setNames((clear || props.names == undefined) ? [] : props.names);\r\n        setDuration((clear || props.duration == undefined) ? (15*60*1000) : props.duration);\r\n        setSet((clear || props.set == undefined) ? true : props.set);\r\n        setRepeat((clear || props.repeat == undefined) ? 0 : props.repeat);\r\n        if(clear) setButtonText('NEW');\r\n    }\r\n    useEffect(()=>resetVariables(),[props]);    \r\n\r\n    //Guidelines Abstracted\r\n    const verifyLevel = (props.verifyLevel != undefined) ? props.verifyLevel : 1;\r\n    const insertNew = (props.insertNew != undefined);\r\n\r\n    const isControlsChanged = () => {if(!props.names) return true;\r\n        if(Array.isArray(props.names))\r\n        for(var i=0; i<props.names.length; i++) {\r\n                if(!names.includes(props.names[i])) return true;\r\n        } if(Array.isArray(names))\r\n        for(var y=0; y<names.length; y++) {\r\n            if(!props.names.includes(names[y])) return true;\r\n        } return false;\r\n    }\r\n    const isTimeChanged = () =>(!props.time || props.time != time);\r\n    const isTitleChanged = () =>(!props.title || props.title != title);\r\n    const isDurationChanged = () =>(!props.duration || props.duration != duration);\r\n    const isSetChanged = () =>(props.set != set);\r\n    const isRepeatChanged = () => (props.repeat == undefined || props.repeat != repeat);\r\n    const isChanged=()=>{\r\n        if(isTimeChanged()) return true;\r\n        if(isTitleChanged()) return true;\r\n        if(!props.names || isControlsChanged()) return true;\r\n        if(isDurationChanged()) return true;\r\n        if(isSetChanged()) return true;\r\n        if(isRepeatChanged()) return true;\r\n        return false;\r\n    }\r\n    const isControlsValid = () => {\r\n        if(Array.isArray(names)) {\r\n            if(names.length == 0) return false;\r\n            for(var i=0; i<names.length; i++) {\r\n                if(names[i] == undefined) return false;\r\n        }} else if(!names || !names.length) return false;\r\n        return true;\r\n    }\r\n    const isTimeValid = () =>(time && !isNaN(time));\r\n    const isTitleValid = () =>(title && title != '');\r\n    const isDurationValid = () =>(duration && !isNaN(duration));\r\n    const isSetValid = () =>(set == false || set == true);\r\n    const isRepeatValid = () => (repeat != null && repeat != undefined && !isNaN(repeat));\r\n    useEffect(()=>{ let text = isChanged() ? 'UPDATE' : ''; \r\n        if(!isTimeValid()) text='TIME';\r\n        if(!isTitleValid()) text='TITLE';\r\n        if(!isControlsValid()) text='CONTROLS';\r\n        if(!isDurationValid()) text='DURATION';\r\n        if(!isSetValid()) text='SET';\r\n        if(!isRepeatValid()) text='REPEAT';\r\n        setButtonText(text);}, [priority, time, title, names, duration, set, repeat]);\r\n        \r\n    //*********************************\r\n    //   API REQUEST & VERIFICATION\r\n    //*********************************\r\n    const makeRequest=async(password, action)=>{ setVerification(undefined); //saving local until fetch up stream is called to replace data \r\n        if(verifyLevel == 1 && !localStorage.getItem(\"password\")) await localStorage.setItem(\"password\", password.toString());\r\n        const success = await props.onUpdate(action || pendingAction, password, priority, time, title, names, duration, set, repeat);\r\n        if(success == true || isNaN(success)) {setButtonText((success != true) ? success : 'SAVED'); setTimeout(()=>{if(insertNew) resetVariables(true);}, 5000);}\r\n        else if(success == 401) { setButtonText('PASS');  localStorage.clear(); setTimeout(()=>setButtonText('UPDATE'), 5000);}\r\n        else if(success == 404) { setButtonText('INVALID');  setTimeout(()=>resetVariables(), 5000);}\r\n        else {setButtonText('FAILED');  setTimeout(()=>resetVariables(), 5000);}\r\n        setPendingAction(undefined);\r\n        return buttonText;\r\n    }\r\n\r\n    const processUpdate=async(action)=>{ setButtonText('PENDING'); if(action) setPendingAction(action); \r\n        if(verifyLevel == 0) makeRequest(undefined, action); //No Security\r\n        else if(verifyLevel == 1 && !localStorage.getItem(\"password\")) setVerification('Enter Control Password to Continue:'); //Only Request if not stored\r\n        else if(verifyLevel == 1) makeRequest(localStorage.getItem(\"password\"), action); //Use Saved Password\r\n        else setVerification('Enter Advanced Passphrase to Proceed:'); //undefined || >1\r\n    }\r\n\r\n    //*********************************\r\n    //   HTML DISPLAY\r\n    //*********************************\r\n    const shortedNameList = (space = window.innerWidth) => { \r\n        if(!DATA.CONTROLS || !names || names.length == 0) return '[]'; \r\n        if(DATA.CONTROLS != undefined && names.length == DATA.CONTROLS.length) return '[ALL]'; \r\n        // if(names.length == 1) return `${names[0]}`\r\n        for(var i=0; i<DATA.controlTypes.length; i++) {let match = true;\r\n            for(var y=0; y<DATA.CONTROLS.length; y++) {\r\n                if((names.includes(DATA.CONTROLS[y].name) && !DATA.CONTROLS[y].types.includes(DATA.controlTypes[i]))\r\n                    || !names.includes(DATA.CONTROLS[y].name) && DATA.CONTROLS[y].types.includes(DATA.controlTypes[i])) { match = false; break;}\r\n            } if(match) return `[${DATA.controlTypes[i]}]`;\r\n        } let result = '';\r\n        names.forEach(name =>  result += (' - '+(space > 900 ? name : name.match(/\\b(\\w)/g).join('.'))));\r\n        return result.substring(3).toUpperCase();//removes first dash :)\r\n    }\r\n    const getUpdateOptions = () => {const list = ['DELETE', 'INCREASE', 'DECREASE'];\r\n        if(isChanged()) list.unshift('RESET');\r\n        if(buttonText == 'UPDATE') list.unshift('UPDATE'); return list;}\r\n\r\n    return <div className='none schedule-row'>\r\n            {(insertNew) ? <SettingsButton title={(buttonText != 'UPDATE') ? buttonText : 'SAVE'} buttonColor={(buttonText != 'UPDATE') ? 'orange' : 'var(--main-color)'} buttonStyle={{gridRow: 1, gridColumn: 1, height: '85%', width: 'auto', maxWidth: '100%', overflowX: 'auto'}}\r\n                    pendingText='SCHEDULING'\r\n                    condense={true}\r\n                    verifyLevel={1}\r\n                    onUpdate={async(password)=>(buttonText == 'UPDATE') ? await makeRequest(password, 'INSERT') : false}\r\n                />\r\n            : <section className='none schedule-value-box' style={{gridRow: (1), gridColumn: 1, backgroundColor: (buttonText != '') ? 'transparent' : (time < DATA.timeNextEvaluation) ? 'black' : null}}>\r\n                <DropMenu value={buttonText == '' ? priority : buttonText} dropListId={`${JSON.stringify(props)}-update`}   subValue={(props.overriddenList && props.overriddenList.length) ? `${props.overriddenList.join(', ')}` : undefined}      buttonColor={getButtonColor(buttonText)} customName='PRIORITY' inputType='number' \r\n                    customDefault={priority}\r\n                    options={getUpdateOptions()}\r\n                    onSelect={(action)=>{if(action == 'RESET') resetVariables(insertNew); else  processUpdate(action);}}\r\n                />\r\n            </section>                \r\n            }\r\n            <section className='none schedule-value-box' style={{gridRow: (1), gridColumn: 2, backgroundColor: (time < DATA.timeNextEvaluation) ? 'black' : null, border: (!isTimeValid()) ? '1px solid darkred' : (isTimeChanged()) ? '1px solid var(--main-color)' : null}}>\r\n                <DropDateMenu  dropListId={`${JSON.stringify(props)}-time`}\r\n                    time={time}\r\n                    onSelect={(t)=>setTime(parseInt(t) || time)}\r\n                />\r\n            </section>\r\n            <section className='none schedule-value-box' style={{gridRow: (1), gridColumn: 3, backgroundColor: (time < DATA.timeNextEvaluation) ? 'black' : null, border: (!isTitleValid()) ? '1px solid darkred' : (isTitleChanged()) ? '1px solid var(--main-color)' : null}}>\r\n                <input type='text' className={'schedule-input schedule-drop-menu-button'} onClick={()=>dispatch({type: 'setDropList'})} value={title} onChange={(event)=>setTitle(event.target.value)} />\r\n            </section>\r\n            <section className='none schedule-value-box' style={{gridRow: (1), gridColumn: 4, backgroundColor: (time < DATA.timeNextEvaluation) ? 'black' : null, border: (!isControlsValid()) ? '1px solid darkred' : (isControlsChanged()) ? '1px solid var(--main-color)' : null}} >\r\n                <DropMenu value={shortedNameList()}   dropListId={`${JSON.stringify(props)}-names`}\r\n                    multipleList={[...names]}\r\n                    options={DATA.CONTROLS ? [...DATA.CONTROLS.map(c=>c.name)] : []}\r\n                    onSelect={(list)=>setNames(Array.isArray(list) ? [...list] : [list])}\r\n                    extraName='TYPES'\r\n                    extraList={DATA.controlTypes ? ['[ALL]', '[NONE]', ...DATA.controlTypes.map(t=>`[${t}]`)] : []}\r\n                    onExtra={(type)=>setNames((type == '[ALL]') ? [...DATA.CONTROLS.map(c=>c.name)] : (type == '[NONE]') ? [] : [...DATA.CONTROLS.filter(c=>c.types.includes(type.replace(/\\[|\\]/g, ''))).map(c=>c.name)])}\r\n                />             \r\n            </section>\r\n            <section className='none schedule-value-box' style={{gridRow: (1), gridColumn: 5, backgroundColor: (time < DATA.timeNextEvaluation) ? 'black' : null, border: (!isDurationValid()) ? '1px solid darkred' : (isDurationChanged()) ? '1px solid var(--main-color)' : null}}>\r\n                <DropMenu value={getDurationName(duration)}   dropListId={`${JSON.stringify(props)}-duration`}\r\n                    options={DURATION_LIST.map(e => e.name)}\r\n                    customName='Minutes'\r\n                    inputType='number'\r\n                    customDefault={duration / 60000}\r\n                    onSelect={(d)=>setDuration(isNaN(d) ? getDurationValue(d) : (d * 60000))}\r\n                />\r\n            </section>\r\n            <section className='none schedule-value-box' style={{gridRow: (1), gridColumn: 6, backgroundColor: (time < DATA.timeNextEvaluation) ? 'black' : null, border: (!isSetValid()) ? '1px solid darkred' : (isSetChanged()) ? '1px solid var(--main-color)' : null}}>\r\n                <DropMenu value={set ? 'ON' : 'OFF'}   dropListId={`${JSON.stringify(props)}-set`}\r\n                    options={['ON', 'OFF']} \r\n                    onSelect={(s)=>{setSet(s == 'ON')}}\r\n                />\r\n            </section>\r\n            <section className='none schedule-value-box' style={{gridRow: (1), gridColumn: 7, backgroundColor: (time < DATA.timeNextEvaluation) ? 'black' : null, border: (!isRepeatValid()) ? '1px solid darkred' : (isRepeatChanged()) ? '1px solid var(--main-color)' : null}}>\r\n                <DropMenu value={repeat ? getDurationName(repeat) : 'ONCE'}   dropListId={`${JSON.stringify(props)}-repeat`}\r\n                    options={['ONCE', ...DURATION_LIST.map(e => e.name)]}\r\n                    customName='Minutes'\r\n                    inputType='number'\r\n                    customDefault={repeat / 60000}\r\n                    onSelect={(r)=>setRepeat((r == 'ONCE') ? 0 : isNaN(r) ? getDurationValue(r) : (r * 60000))}\r\n                />\r\n            </section>\r\n        {verification ?\r\n            <Verify\r\n                prompt={verification}\r\n                onSubmit={(password)=>makeRequest(password, pendingAction)}\r\n                onCancel={()=>{setVerification(undefined); setButtonText('UPDATE');}}\r\n            />  : <div className='none no-size' style={{position:'absolute'}}></div>}\r\n    </div>;\r\n}\r\n\r\n\r\nconst Schedule = (props) => {\r\n    const SERVER_URL = useSelector(root => root.serverURL);\r\n    const [SCHEDULES, setSCHEDULES] = useState([]);\r\n    const [sortByTime, setSortByTime] = useState(true);\r\n    const [calculatedList, setCalculatedList] = useState([]);\r\n\r\n    //Search Schedules for overlapping\r\n    const calculateOccurrenceList = (schedules = SCHEDULES, days=3) =>{ if(!schedules || !schedules.length) return; \r\n        let minimum = 0; let bottom = 0; const end = (new Date().getTime()+(days*24*60*60*1000)); let count=0;\r\n        const occurrences = [...schedules.map(s => ({time: s.time, duration: s.duration, repeat: s.repeat, priority: s.priority, names: s.names || [], overrides: []}))];\r\n        do { minimum = occurrences.reduce((min,s)=>(s.time < min && s.time > bottom) ? s.time : min, end); count++;\r\n            const least = occurrences.find(s=>(minimum == s.time)); \r\n            if(least == undefined) break; \r\n            occurrences.forEach(s => { if((!least.overrides.includes(s.priority)) && (least.priority > s.priority) && ((s.time) < (least.time + least.duration)) && ((s.time + s.duration) > (least.time)) && (least.names.some(e=>s.names.includes(e)))) least.overrides.push(s.priority);});\r\n            bottom  = least.time;\r\n            least.time += least.repeat;\r\n            if(count > 1000) {console.log('Schedule.calculateOccurrenceList() Maxed Search: ', count, occurrences); break;}\r\n        } while(minimum < end);\r\n        setCalculatedList([...occurrences.map(s=>({priority: s.priority, overrides: [...s.overrides.sort((a,b)=>(b-a))]}))]);\r\n    }\r\n\r\n    //API Referencing\r\n    const fetchSchedules = () => axios.get(`${SERVER_URL}/data-schedules/`).then((response) => { console.log('SCHEDULES', response.data.schedules);\r\n            setSCHEDULES(response.data.schedules);  calculateOccurrenceList(response.data.schedules);\r\n        }).catch((error) => {console.log('Failed to Fetch Schedule Information', error); return error.response ? error.response.status : false;});\r\n    useEffect(()=>fetchSchedules(),[]);\r\n    // useEffect(()=>{console.log('SORTING', sortByTime, SCHEDULES); setSCHEDULES(sortByTime ? [...SCHEDULES.sort((a,b) => (a.time - b.time))] : [...SCHEDULES.sort((a,b) => (b.priority - a.priority))]);}, [sortByTime]);\r\n\r\n    const getOverriddenList=(priority)=>{if(!calculatedList || (SCHEDULES.length != calculatedList.length) || priority == undefined) return [];\r\n        const list = calculatedList.find(s=>(s.priority == priority));\r\n        return list ? list.overrides : []; };\r\n\r\n    return( <div id='schedule-list' className='none border-box'>\r\n            <div className='none schedule-row'>\r\n                <label className='schedule-header' style={{gridColumn: 1}}>Edit</label>\r\n                <label className='schedule-header' style={{gridColumn: 2}}>Occurrence</label>\r\n                <label className='schedule-header' style={{gridColumn: 3}}>Title</label>\r\n                <label className='schedule-header' style={{gridColumn: 4}}>Control</label>\r\n                <label className='schedule-header' style={{gridColumn: 5}}>Duration</label>\r\n                <label className='schedule-header' style={{gridColumn: 6}}>Set</label>\r\n                <label className='schedule-header' style={{gridColumn: 7}}>Repeat</label>\r\n            </div>\r\n{/* LIST NEW SCHEDULE Fields */}\r\n          <ScheduleRow insertNew={true} \r\n            onUpdate={async(action, password, priority, time, title, names, duration, set, repeat)=>{\r\n                if(action == 'INSERT') return await axios.post(`${SERVER_URL}/schedule-add/`, {\r\n                    PASSWORD: password, time: time, title: title, names: JSON.stringify(names), duration: duration, set: set, repeat: repeat\r\n                }).then((response) => {fetchSchedules(); return true;}).catch((error) => error.response ? error.response.status : false);\r\n            }} />\r\n{/* LIST EXISTING props.SCHEDULES : onTap Editable */}\r\n            <div className='schedule-button-row'>\r\n                <SettingsButton title={sortByTime ? 'Sort Priority' : 'Sort Time'} buttonStyle={{padding: '0.40rem'}}\r\n                    condense={true}\r\n                    buttonColor='orange'\r\n                    verifyLevel={0}\r\n                    onUpdate={async(password)=>{setSortByTime(!sortByTime); return 'Sorting';}}\r\n                />\r\n                <HoldButton buttonColor='black' buttonStyle={{padding: '0.45rem'}}/>\r\n                <SettingsButton title='UPDATE' buttonStyle={{padding: '0.40rem'}} pendingText='RETRIEVING'\r\n                    condense={true}\r\n                    verifyLevel={1}\r\n                    onUpdate={async(password)=>{const response = await fetchSchedules(); return (response == true) ? 'UPDATED' : response; }}\r\n                />\r\n            </div>\r\n            {[...SCHEDULES.sort((a,b) => sortByTime ? (a.time - b.time) : (b.priority - a.priority))].map((schedule,index) => <ScheduleRow key={`Schedule-${index}`} verifyLevel={1}\r\n                priority={schedule.priority} time={schedule.time} title={schedule.title} names={schedule.names} duration={schedule.duration} set={(schedule.set == true || schedule.set == 1)} repeat={schedule.repeat} overriddenList={getOverriddenList(schedule.priority)}\r\n            onUpdate={async (action, password, priority, time, title, names, duration, set, repeat)=>{\r\n                if(action == 'DELETE') return await axios.post(`${SERVER_URL}/schedule-delete/`, {\r\n                    PASSWORD: password, priority: schedule.priority\r\n                }).then((response) => {fetchSchedules(); return true;}).catch((error) => error.response ? error.response.status : false);\r\n                else if(action == 'UPDATE')  return await axios.post(`${SERVER_URL}/schedule-replace/`, {\r\n                    PASSWORD: password, currentPriority: schedule.priority, priority: priority, time: time, title: title, names: JSON.stringify(names), duration: duration, set: set, repeat: repeat\r\n                }).then((response) => {fetchSchedules(); return true;}).catch((error) => error.response ? error.response.status : false);\r\n                else if(action == 'INCREASE' || action == 'DECREASE') return await axios.post(`${SERVER_URL}/schedule-priority-increase/`, {\r\n                    PASSWORD: password, priority: schedule.priority, increase: (action == 'INCREASE')\r\n                }).then((response) => {fetchSchedules(); return true;}).catch((error) => error.response ? error.response.status : false);\r\n                else if(!isNaN(parseInt(action))) return await axios.post(`${SERVER_URL}/schedule-update/`, {\r\n                    PASSWORD: password, priority: schedule.priority, attributeName: 'priority', value: parseInt(action) || 0\r\n                }).then((response) => {fetchSchedules(); return true;}).catch((error) => error.response ? error.response.status : false);\r\n\r\n            }} />)}\r\n    </div>);\r\n}\r\n\r\nexport default Schedule;","import React, {useState, useEffect} from 'react';\r\nimport { useSelector} from 'react-redux';\r\nimport axios from 'axios';\r\nimport Verify from '../Verify';\r\n\r\nimport '../index.css';\r\nimport './Climate.css';\r\n\r\nconst getButtonColor=(buttonText)=>(buttonText=='') ? 'transparent' : (buttonText=='UPDATE') ? 'var(--main-color)' : (buttonText=='PASS' || buttonText=='INVALID' || buttonText=='FAILED') ? '#e8000d' : (buttonText=='PENDING' || buttonText=='BLANK') ? 'orange' : '#cc5500';\r\n\r\nconst Climate = (props) => {\r\n    const convertToFahrenheit = useSelector(root => root.convertToFahrenheit);\r\n    const SERVER_URL = useSelector(root => root.serverURL);\r\n    const [CLIMATE, setCLIMATE] = useState([]);\r\n    const [range, setRange] = useState({maximumTemperature: 24, maximumHumidity: 75, minimumTemperature: 24, minimumHumidity: 75})\r\n    const [temperatureMode, setTemperatureMode] = useState(true);\r\n    const [saveButtonText, setSaveButtonText] = useState('Pending');\r\n    const [verification, setVerification] = useState(undefined);\r\n\r\n//API Referencing\r\n    const fetchClimate = () => axios.get(`${SERVER_URL}/data-climate/`).then((response) => { console.log('CLIMATE', response.data);\r\n        setCLIMATE(response.data.climate);  setSaveButtonText('');\r\n        setRange({maximumTemperature: response.data.maximumTemperature, maximumHumidity: response.data.maximumHumidity, minimumTemperature: response.data.minimumTemperature, minimumHumidity: response.data.minimumHumidity});\r\n    }).catch((error) => console.log('Failed to Fetch Climate Information', error));\r\n    useEffect(()=>fetchClimate(),[temperatureMode]);\r\n\r\n    const sendChanges = (password) => {setVerification(undefined); \r\n    // if(saveButtonText == 'Save Changes')\r\n        axios.post(`${SERVER_URL}/set-settings/`, {ADVANCED_PASSPHRASE: password,\r\n            tag: temperatureMode ? 'climate-temperature' : 'climate-humidity',\r\n            climate: JSON.stringify(CLIMATE),\r\n        }).then((response) => { setSaveButtonText('Saved'); console.log(response);\r\n            setTimeout(()=>{fetchClimate();}, 5000);\r\n        }).catch((error) => console.log('Failed to Fetch Climate Information', error));\r\n    // else setSaveButtonText('45');\r\n}\r\n\r\n//UI Utilities\r\n    const formatTemperature = (temp) => convertToFahrenheit ? (Math.round((temp*(9/5)+32)*10)/10) : temp;\r\n    const getMaxValue = (format=false, ghost=false, round = true) => {const value = (temperatureMode != ghost) ? format ? formatTemperature(range.maximumTemperature) : range.maximumTemperature  : range.maximumHumidity; return round ? Math.ceil(value) : value; }\r\n    const getMinValue = (format=false, ghost=false, round = true) => {const value = (temperatureMode != ghost) ? format ? formatTemperature(range.minimumTemperature) : range.minimumTemperature :  range.minimumHumidity; return round ? Math.floor(value) : value; }\r\n\r\n    const getWidthOffset = () => 5.0 * parseFloat(getComputedStyle(document.documentElement).fontSize); //rem unit = column 1 & margin/padding\r\n\r\n    const getRange = (format=false) => {let values = [];\r\n        const cellRatio = ((window.innerWidth-(getWidthOffset()))/((getMaxValue(format)-getMinValue(format))*(2.0*parseFloat(getComputedStyle(document.documentElement).fontSize))));\r\n        for(var i=(getMinValue(format)); i<(getMaxValue(format)); i += Math.ceil(1/cellRatio)) { values.push(i); }\r\n                values.push(getMaxValue(format)); return values; }\r\n\r\n    const calculatedWidth = (3.5 * getRange(true).length * (1.0*parseFloat(getComputedStyle(document.documentElement).fontSize)))+getWidthOffset(); //Designed to Allow twice space for getRange() list\r\n\r\n\r\n    return(<div id='climate-container'  >\r\n        <div id='climate-header-box'>\r\n            <button className='climate-header-button' style={{backgroundColor: temperatureMode ? 'rgba(0, 102, 0, 0.6)' : 'rgba(255, 255, 255, 0.4)', color: temperatureMode ? 'white' : 'black'}} onClick={()=>setTemperatureMode(true)}>Temperature</button>\r\n            <button className='climate-header-button' style={{backgroundColor: temperatureMode ? 'rgba(255, 255, 255, 0.4)' : 'rgba(0, 102, 0, 0.6)',  color: temperatureMode ? 'black' : 'white'}} onClick={()=>setTemperatureMode(false)}>Humidity</button>\r\n            {saveButtonText != '' ? <button className='climate-header-button' style={{backgroundColor: (saveButtonText == 'Saved' || saveButtonText == 'Save Changes') ? '#cc5500' : (saveButtonText == 'Pending') ? 'orange' : '#e8000d',  color: 'black'}} onClick={()=>{setSaveButtonText('Pending'); setVerification('Enter Advanced Passphrase to Proceed:');}}>{saveButtonText}</button> : <section className='none no-size'></section>}\r\n        </div>\r\n        <div id='climate-slider-box' className='none ' style={{maxWidth: `${calculatedWidth}px`}}>\r\n                <div className='none climate-slider-value-box' style={{gridRow: 1, gridColumn: 1, paddingLeft: '4.0rem', paddingRight: '2.0rem', width: `${(calculatedWidth*1)-(1*getWidthOffset())-0}px`,}}>\r\n                    {getRange(false).map((v,j) => <label key={`climate-slider-range-value-$first-${j}`} className='climate-slider-range-value' style={{gridColumn: (j+1), textAlign: j==0 ? 'left' : (j == (getRange(false).length-1)) ? 'right' : 'center'}}>{v}</label>)}\r\n                </div>\r\n            {CLIMATE.map( (item, i) => <div key={`slider-${i}`} className='none climate-slider-outer-box' style={{gridRow: (i+2)}} >              \r\n                <strong className='climate-hour-value' style={{}}>{item.hour}:00</strong>\r\n                <strong className='climate-hour-value' style={{gridRow: 2, color: 'var(--main-color)', fontSize: '0.8rem'}}>{temperatureMode ? parseFloat(item.temperature).toFixed(1) : parseFloat(item.humidity).toFixed(1)} {temperatureMode ? <span className='none' style={{fontSize: '0.65rem', verticalAlign: 'top'}}>&#8457;</span> : '%'}</strong>\r\n\r\n                <input readOnly className='none climate-slider-range-bar climate-slider-range-bar-ghost' style={{width: `${(calculatedWidth*1)-(1*getWidthOffset())-0}px`, }} type='range' step='0.01' min={getMinValue(false, true, false)} max ={getMaxValue(false, true, false)} value={!temperatureMode ? CLIMATE[i].temperature : CLIMATE[i].humidity} />\r\n                <input readOnly className='none climate-slider-range-bar climate-slider-range-bar-ghost-dot' style={{width: `${(calculatedWidth*1)-(1*getWidthOffset())-0}px`, }} type='range' step='0.01' min={getMinValue(false, false, false)} max ={getMaxValue(false, false, false)} value={temperatureMode ? CLIMATE[i].temperatureAverage : CLIMATE[i].humidityAverage} />\r\n                <input className='none climate-slider-range-bar' style={{width: `${(calculatedWidth*1)-(1*getWidthOffset())-0}px`, }} type='range' step='0.01' min={getMinValue(false, false, false)} max ={getMaxValue(false, false, false)} value={temperatureMode ? CLIMATE[i].temperature : CLIMATE[i].humidity} onChange={(event)=>{temperatureMode ? CLIMATE[i].temperature=event.target.value : CLIMATE[i].humidity=event.target.value;  setCLIMATE([...CLIMATE]); setSaveButtonText('Save Changes');}} />\r\n                {/* <input className='none climate-slider-range-bar' style={{width: `${(calculatedWidth*1)-(1*getWidthOffset())-0}px`, }}  type='range' step='0.01'  min={getMinValue(false)} max ={getMaxValue(false)} value={sample} onChange={(event)=>{console.log(event.target.value, formatTemperature(event.target.value)); setSample(event.target.value);}} /> */}\r\n\r\n                <div id={`data-${i}`} className='none climate-slider-value-box' style={{width: `${(calculatedWidth*1)-(1*getWidthOffset())-0}px`, }}>\r\n                    {getRange((i % 2) == 0).map((v,j) => <label key={`climate-slider-range-value-${i}-${j}`} className='climate-slider-range-value' style={{gridColumn: (j+1), textAlign: j==0 ? 'left' : (j == (getRange((i % 2) == 0).length-1)) ? 'right' : 'center'}}>{v}</label>)}\r\n                </div>\r\n                </div>)}\r\n        </div>\r\n        {verification ?\r\n            <Verify\r\n                prompt={verification}\r\n                onSubmit={sendChanges}\r\n                onCancel={()=>{setVerification(undefined); setSaveButtonText(''); fetchClimate();}}\r\n            />  : <div className='none no-size' style={{position:'absolute'}}></div>}\r\n    </div>);\r\n}\r\nexport default Climate;","\r\nimport React, {useState, useEffect} from 'react';\r\nimport { useSelector} from 'react-redux';\r\nimport { Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport '../index.css';\r\nimport './ErrorBar.css';\r\n\r\nconst ErrorBar = (props) => {\r\n    const DATA = useSelector(root => root.data);\r\n    const [ERROR_LIST, setERROR_LIST] = useState([]);\r\n    const routeHistory = useHistory();\r\n    const routeLocation = useLocation();\r\n\r\n    useEffect(()=>{ const list = [];\r\n        if(DATA.sensorErrorCode == undefined) list.push('SERVER DISCONNECTED');\r\n        if(DATA.sensorErrorCode) list.push('SENSOR ERROR');\r\n        if(DATA.maximumTemperatureErrorCode) list.push('MAXIMUM TEMPERATURE');\r\n        if(DATA.minimumTemperatureErrorCode) list.push('MINIMUM TEMPERATURE');\r\n        if(DATA.maximumHumidityErrorCode) list.push('MAXIMUM HUMIDITY');\r\n        if(DATA.minimumHumidityErrorCode) list.push('MINIMUM HUMIDITY');\r\n        if(DATA.accessDatabase != undefined && !DATA.accessDatabase) list.push('DATABASE DISCONNECTED');\r\n    setERROR_LIST(list); },[DATA]);\r\n\r\n    return(\r\n        <div id='error-bar-container'  style={{display: ERROR_LIST.length ? 'block': 'none'}} onClick={()=>{\r\n            if(routeLocation.pathname == '/settings') routeHistory.push('/log');\r\n                else routeHistory.push('/settings');\r\n        }}>\r\n            <div id='error-bar-wrap' >\r\n                {ERROR_LIST.map(e=><strong key={e} className='error-bar-text'>{e}</strong>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ErrorBar;","import React, {useState, useEffect} from 'react';\r\nimport { useSelector, useDispatch} from 'react-redux';\r\nimport Verify from '../Verify';\r\n\r\nimport '../index.css';\r\nimport './Settings.css';\r\n\r\nconst getButtonColor=(buttonText)=>(buttonText=='') ? 'transparent' : (buttonText=='UPDATE') ? 'var(--main-color)' : (buttonText=='PASS' || buttonText=='INVALID') ? '#e8000d' : (buttonText=='PENDING' || buttonText=='BLANK') ? 'orange' : '#cc5500';\r\n\r\nconst SettingsList = (props) => { \r\n    const [verification, setVerification] = useState(undefined);\r\n    const openList = useSelector(root => root.dropListOpen);\r\n    const dispatch = useDispatch();\r\n    const [current, setCurrent] = useState(props.current == undefined ? [] : Array.isArray(props.current) ? props.current : [props.current]);\r\n    const [options, setOptions] = useState(props.options == undefined ? current : Array.isArray(props.options) ? props.options : [props.options]);\r\n    const [list, setList] = useState(props.current == undefined ? [] : Array.isArray(props.current) ? props.current : [props.current]);\r\n    const [custom, setCustom] = useState('');\r\n    const [buttonText, setButtonText] = useState('');\r\n\r\n    useEffect(()=>{//Syncing Props b/c initial render redux.data == {} -> fetchData() //Not proper solution, but others didn't work :: https://tkdodo.eu/blog/putting-props-to-use-state\r\n        const newCurrent = props.current == undefined ? [] : Array.isArray(props.current) ? props.current : [props.current];\r\n        const newOptions = props.options == undefined ? newCurrent : Array.isArray(props.options) ? props.options : [props.options];\r\n        setCurrent(newCurrent);\r\n        setOptions(newOptions); \r\n        setList(newCurrent);\r\n    },[props]);\r\n\r\n    //Guidelines Abstracted\r\n    const verifyLevel = (props.verifyLevel != undefined) ? props.verifyLevel : 2;\r\n    const selectMultiple = (props.selectMultiple != undefined) ? props.selectMultiple : (Array.isArray(props.current));\r\n    const inputType = (props.inputType != undefined) ? props.inputType : (isNaN(props.current) ? 'text' : 'number' );\r\n    const addCustom = (props.addCustom != undefined) ? props.addCustom : false;\r\n    const condense = (props.condense != undefined) ? props.condense : false;\r\n\r\n\r\n    const isChanged=(latestList)=>{\r\n        const l = latestList || list;\r\n        if(Array.isArray(l))\r\n            for(var i=0; i<l.length; i++) {\r\n                    if(!current.includes(l[i])) return true;\r\n            } \r\n        if(Array.isArray(current))\r\n            for(var y=0; y<current.length; y++) {\r\n                if(!l.includes(current[y])) return true;\r\n        }return false;\r\n    }\r\n\r\n    const updateButton = async(latestList) => { const l = latestList || list;\r\n        let text = isChanged(l) ? 'UPDATE' : ''; \r\n        if(Array.isArray(l)){\r\n        l.forEach(v=>{if(!options.includes(v)) text='INVALID';});\r\n        if(!selectMultiple && l.length > 1) text='INVALID';\r\n        if(l.length == 0) text='BLANK';\r\n        for(var i=0; i<l.length; i++) {\r\n            if(l[i] == undefined) text='BLANK';\r\n        } \r\n    } setButtonText(text);\r\n        return text; }\r\n    useEffect(()=>updateButton(), [list]);\r\n\r\n    //*********************************\r\n    //   API REQUEST & VERIFICATION\r\n    //*********************************\r\n    const makeRequest=async(password, latestList)=>{ setVerification(undefined); //saving local until fetch up stream is called to replace data\r\n        if(verifyLevel == 1 && !localStorage.getItem(\"password\")) await localStorage.setItem(\"password\", password.toString());\r\n\r\n        const success = await props.onUpdate(selectMultiple ? JSON.stringify(latestList || list) : list[0], password);\r\n        if(success == true || isNaN(success)) { setButtonText((success != true) ? success : 'SAVED'); setCurrent(list); setTimeout(()=>setButtonText(''), 5000); }\r\n        else if(success == 401) { setButtonText('PASS'); setTimeout(()=>setList(current), 5000); localStorage.clear();}\r\n        else if(success == 404) { setButtonText('INVALID'); setTimeout(()=>setList(current), 5000); localStorage.clear();}\r\n        else {setButtonText('FAILED'); setTimeout(()=>setList(current), 5000); }\r\n    }\r\n\r\n    const processUpdate=async(latestList)=>{ if(await updateButton(latestList) == 'UPDATE') { setButtonText('PENDING'); dispatch({type: 'setDropList'});\r\n        if(verifyLevel == 0) makeRequest(undefined, latestList); //No Security\r\n        else if(verifyLevel == 1 && !localStorage.getItem(\"password\")) setVerification('Enter Control Password to Continue:'); //Only Request if not stored\r\n        else if(verifyLevel == 1) makeRequest(localStorage.getItem(\"password\"), latestList); //Use Saved Password\r\n        else setVerification('Enter Advanced Passphrase to Proceed:'); //undefined || >1\r\n    }}\r\n\r\n    const toggleOption=async(option)=>{ let latest = [...list]; let allowed = [...options];\r\n    //Special Email Verification\r\n        if(props.inputType == 'email' && !(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/).test(option)) {setButtonText('Email'); return 'Email';}\r\n    //Add Custom to Options\r\n        if(addCustom && !allowed.includes(option)) allowed = [...options, option];\r\n        //Add to Select List\r\n            if(!selectMultiple && (addCustom || allowed.includes(option))) latest=[option]; //Single set as list\r\n            else if(list.includes(option)) latest= [...list.filter((o) => (o != option && allowed.includes(o)))]; //remove list\r\n            else latest =  [...list.filter((o) => allowed.includes(o)), option]; //add list\r\n\r\n            setOptions([...allowed]); setList([...latest]);\r\n            if(!selectMultiple) processUpdate(latest);\r\n        return await updateButton(latest);\r\n    }\r\n    \r\n    //*********************************\r\n    //   HTML DISPLAY\r\n    //*********************************\r\n    const getOldOptions = () => [...list.filter(c=>!options.includes(c))]; //old/changed control names\r\n\r\n    return(<div id={props.title} className='settings-value-box'  style={{ gridTemplateColumns: (condense) ? 'auto 40%' : null}} onFocus={()=>{}} onBlur={()=>{}} >\r\n        {(props.title==undefined) ?  <div className='none no-size' style={{position:'absolute'}}></div> : <strong className='settings-value-title' >{props.title}</strong>}\r\n            {(openList == props.dropListId) ? <div ><button className='settings-value-input ' onClick={()=>dispatch({type: 'setDropList', payload: props.dropListId})} >{list ? list.toString() : ''}</button>\r\n                        <div className='drop-menu-list' style={{top: options.length <= 5 ? null : '5vh', position: options.length <= 5 ? 'absolute' : 'fixed'}}>\r\n                            <button key='settings-close-button' className='drop-menu-item' style={{border: 'none', borderRadius: 0, borderBottom: '1px solid whitesmoke', backgroundColor: 'whitesmoke', color: 'black'}} onClick={()=>{\r\n                                        dispatch({type: 'setDropList'});\r\n                                    }}>Close</button>\r\n                        {getOldOptions().map((option, i) => \r\n                            <label key={option} className='drop-menu-item' style={{gridRow: (i+2), color: 'gold'}} onClick={()=>{ \r\n                                setList(old => [...old.filter((o) => (o != option && options.includes(o)))])\r\n                                if(!selectMultiple) dispatch({type: 'setDropList'});\r\n                                if(!selectMultiple) processUpdate();\r\n                            }}>{option.toString()}</label>\r\n                        )}\r\n                        {options.map((option, i) => \r\n                            <label key={option} className='drop-menu-item' style={{gridRow: (i+2+getOldOptions().length), border: list.includes(option) ? '1px solid var(--main-color)' : 'none', color: list.includes(option) ? 'var(--main-color)' : 'white'}} onClick={async()=>{\r\n                                await toggleOption(option);\r\n                                if(!selectMultiple) dispatch({type: 'setDropList'});\r\n                                if(!selectMultiple) processUpdate();\r\n                            }}>{option.toString()}</label>\r\n                        )}\r\n                         {addCustom ? <div className='none' style={{display:'inline-grid', gridRow: (getOldOptions().length + options.length+3), gridColumn: 1}}>\r\n                                <input key='settings-add-input' type={inputType} className='drop-menu-item' style={{gridRow: (1), gridColumn: 1, width: '10.0rem', borderRadius: 0, border: '1px solid whitesmoke', backgroundColor: 'black', color: 'white'}} \r\n                                    value={custom}\r\n                                    onChange={(c)=>setCustom(c.target.value)}\r\n                                    onKeyPress={async(e)=>{ if (e.charCode == 13) {\r\n                                        if(await toggleOption(custom) == 'UPDATE') setCustom('');\r\n                                        if(!selectMultiple) dispatch({type: 'setDropList'});\r\n                                        if(!selectMultiple) processUpdate();\r\n                                    }}}/>\r\n                                <button key='settings-add-button' className='drop-menu-item' style={{gridRow: (1), gridColumn: 2, border: 'none', borderRadius: 0, borderBottom: '1px solid whitesmoke', backgroundColor: 'whitesmoke', color: 'black'}} onClick={async()=>{\r\n                                        if(await toggleOption(custom) == 'UPDATE') setCustom('');\r\n                                        if(!selectMultiple) dispatch({type: 'setDropList'});\r\n                                    }}>ADD</button>\r\n                        </div> : <div className='none no-size'></div>}\r\n                        {(condense || buttonText == 'UPDATE') ? <button key='settings-save-button' className='drop-menu-item' style={{border: 'none', borderRadius: 0, border: 'none', backgroundColor: getButtonColor(buttonText), color: 'white'}} onClick={()=>{\r\n                                        processUpdate();\r\n                                    }}>{buttonText}</button> : <div className='none no-size'></div>}\r\n                </div></div> \r\n            : <button className='settings-value-input ' onClick={()=>dispatch({type: 'setDropList', payload: props.dropListId})} >{list ? list.toString() : ''}</button>}\r\n        {(condense && !selectMultiple) ?  <div className='none no-size' style={{position:'absolute'}}></div> : <button className='settings-value-button' onClick={processUpdate}  style={{backgroundColor: getButtonColor(buttonText)}}>{buttonText}</button> }\r\n        {verification ?\r\n            <Verify\r\n                prompt={verification}\r\n                onSubmit={makeRequest}\r\n                onCancel={()=>{setVerification(undefined); setButtonText('UPDATE'); if(condense) setList([...current]); }}\r\n            />  : <div className='none no-size' style={{position:'absolute'}}></div>}\r\n    </div>);\r\n}\r\n\r\nexport default SettingsList;\r\n","import React, {useState, useEffect} from 'react';\r\nimport Verify from '../Verify';\r\n\r\nimport '../index.css';\r\nimport './Settings.css';\r\n\r\nconst getButtonColor=(buttonText)=>(buttonText=='') ? 'transparent' : (buttonText=='UPDATE') ? 'var(--main-color)' : (buttonText=='PASS' || buttonText=='INVALID' || buttonText=='FAILED') ? '#e8000d' : (buttonText=='PENDING' || buttonText=='BLANK') ? 'orange' : '#cc5500';\r\n\r\nconst SettingsBlank = (props) => {\r\n    const [verification, setVerification] = useState(undefined);\r\n    const [current, setCurrent] = useState(props.current);\r\n    const [value, setValue] = useState(current);\r\n    const [buttonText, setButtonText] = useState('');\r\n\r\n    //Guidelines Abstracted\r\n        const verifyLevel = (props.verifyLevel != undefined) ? props.verifyLevel : 2;\r\n        const inputType = (props.inputType != undefined && props.condense == undefined) ? props.inputType : (isNaN(props.current) ? 'text' : 'number' );\r\n        const numberStep = (props.numberStep != undefined) ? props.numberStep : 1;\r\n        const condense = (props.condense != undefined) ? props.condense : false;\r\n\r\n        const updateButton = async()=>{const text = (value == current && props.current == undefined) ? 'BLANK' : (inputType == 'number' && isNaN(value)) ? 'NUMBER' : (value != current) ? 'UPDATE' : '';\r\n                                        setButtonText(text); return text;}\r\n        useEffect(()=>updateButton(), [value]);\r\n\r\n    //*********************************\r\n    //   API REQUEST & VERIFICATION\r\n    //*********************************\r\n    const makeRequest=async(password)=>{ setVerification(undefined); //saving local until fetch up stream is called to replace data\r\n        if(verifyLevel == 1 && !localStorage.getItem(\"password\")) await localStorage.setItem(\"password\", password.toString());\r\n        const success = await props.onUpdate(value, password);\r\n        if(success == true || isNaN(success)) {setButtonText((success != true) ? success : 'SAVED'); setCurrent(inputType == 'textarea' ? '' : value); if(inputType == 'textarea') setValue(''); setTimeout(()=>setButtonText(''), 5000); }\r\n        else if(success == 401) { setButtonText('PASS'); setTimeout(()=>setValue(current), 5000);  localStorage.clear();}\r\n        else if(success == 404) { setButtonText('INVALID');setTimeout(()=>setValue(current), 5000); }\r\n        else {setButtonText('FAILED'); setTimeout(()=>setValue(current), 5000); }\r\n\r\n    }\r\n\r\n    const processUpdate=async()=>{ if(await updateButton() == 'UPDATE') { setButtonText('PENDING');\r\n        if(verifyLevel == 0) makeRequest(undefined); //No Security\r\n        else if(verifyLevel == 1 && !localStorage.getItem(\"password\")) setVerification('Enter Control Password to Continue:'); //Only Request if not stored\r\n        else if(verifyLevel == 1) makeRequest(localStorage.getItem(\"password\")); //Use Saved Password\r\n        else setVerification('Enter Advanced Passphrase to Proceed:'); //undefined || >1\r\n    }}\r\n\r\n    //*********************************\r\n    //   HTML DISPLAY\r\n    //*********************************\r\n\r\n    return(<div className='settings-value-box' style={{gridTemplateColumns: (condense) ? '1fr 1fr' : null}}>\r\n        {(props.title==undefined) ?  <div className='none no-size' style={{position:'absolute'}}></div> : <strong className='settings-value-title' >{props.title}</strong>}\r\n        {inputType == 'textarea' ? <textarea name=\"textarea\" value={value} onChange={(v)=>setValue(v.target.value)} />\r\n        : <input className='settings-value-input' style={{color: (condense && buttonText != '') ? getButtonColor(buttonText) : null}} type={inputType} step={inputType == 'number' ? numberStep : null} value={value} onChange={(v)=>setValue(v.target.value)} onKeyPress={(e)=>{if(e.charCode == 13) {processUpdate();}}}/>}\r\n        {condense ?  <div className='none no-size' style={{position:'absolute'}}></div> : <button className='settings-value-button' onClick={processUpdate}  style={{backgroundColor:  getButtonColor(buttonText)}}>{(inputType == 'textarea' && value != '') ? 'SAVE' : buttonText}</button>}\r\n        {verification ?\r\n            <Verify\r\n                prompt={verification}\r\n                onSubmit={makeRequest}\r\n                onCancel={()=>{setVerification(undefined); setButtonText('UPDATE');}}\r\n            />  : <div className='none no-size' style={{position:'absolute'}}></div>}\r\n    </div>);\r\n}\r\nexport default SettingsBlank;\r\n","import React from 'react';\r\nimport { useHistory} from \"react-router-dom\";\r\nimport { useSelector, useDispatch} from 'react-redux';\r\nimport axios from 'axios';\r\nimport SettingsList from './SettingsList';\r\nimport SettingsBlank from './SettingsBlank';\r\nimport SettingsButton from './SettingsButton';\r\nimport {fetchData} from '../index';\r\nimport useInterval from '../useInterval';\r\n\r\nimport '../index.css';\r\nimport './Settings.css';\r\n\r\n/*SETTINGS Props Key : 9-26-2021\r\nSettingsList.jsx\r\n    + dropListId\r\n    + title\r\n    + current\r\n    + options\r\n    + onUpdate\r\n    ? verifyLevel = 2\r\n    ? selectMultiple = current type\r\n    ? addCustom = false\r\nSettingsBlank.jsx\r\n    + title\r\n    + current\r\n    + onUpdate\r\n    ? verifyLevel = 2\r\n    ? inputType = current type: text/number\r\n    ? numberStep = 1\r\nSettingsButton.jsx\r\n    + title\r\n    + onUpdate\r\n    ? verifyLevel = 1\r\n*/\r\n\r\nconst Settings = (props) => {\r\n// console.log(props);\r\nconst SERVER_URL = useSelector(root => root.serverURL);\r\nconst DATA = useSelector(root => root.data);\r\nconst SCREENSAVER_BRIGHTNESS = useSelector(root => root.screenSaverBrightness);\r\nconst convertToFahrenheit = useSelector(root => root.convertToFahrenheit);\r\nconst dispatch = useDispatch();\r\nconst routeHistory = useHistory();\r\n\r\n    const post = async(route, body, onSuccess) => axios.post(`${SERVER_URL}${route}/`, body).then((response)=>onSuccess == 'response' ? response : onSuccess || true).catch((error)=>error.response ? error.response.status : false);\r\n    const put = async(route, body, onSuccess) => axios.put(`${SERVER_URL}${route}/`, body).then((response)=>onSuccess == 'response' ? response : onSuccess || true).catch((error)=>error.response ? error.response.status : false);\r\n\r\n    const LOCAL_SETTINGS = [\r\n        <SettingsList title='Temperature:'\r\n            dropListId='temperature-conversion'\r\n            current={convertToFahrenheit ? 'Fahrenheit' : 'Celsius'}\r\n            options={['Celsius', 'Fahrenheit']}\r\n            verifyLevel={0}\r\n            onUpdate={(value, password)=>{dispatch({type: 'toggleConvertToFahrenheit', payload: (value == 'Fahrenheit')}); return true;}}/>, \r\n        <SettingsButton title='Deactivate Screen Saver' pendingText='Deactivating'\r\n            onUpdate={async()=>{props.deactivateScreenSaver(300000); return '5 Minutes';}} />,\r\n        <SettingsList title='ScreenSaver Brightness:'\r\n            dropListId='screensaver-brightness'\r\n            current={SCREENSAVER_BRIGHTNESS.setting}\r\n            options={SCREENSAVER_BRIGHTNESS.settingOptions}\r\n            verifyLevel={0}\r\n            onUpdate={(value, password)=>{\r\n                if(SCREENSAVER_BRIGHTNESS.settingOptions.includes(value)) {dispatch({type: 'setting', payload: value}); return true;}\r\n                else return false;}}/>, \r\n        <div style={{borderBottom: '1px solid var(--main-color)', margin: '0.5rem 0', width: '100%'}}></div>,\r\n        <SettingsBlank title='Server URL:'\r\n                current={SERVER_URL}\r\n                verifyLevel={0}\r\n                onUpdate={async(value, password)=>{dispatch({type: 'setServerURL', payload: value}); const response = await fetchData(); if(response == true) routeHistory.push('/'); return (response == true) ? 'UPDATING' : response;}}/>,\r\n        <SettingsButton title='Update Data' pendingText='RETRIEVING'\r\n        onUpdate={async()=>{const response = await fetchData(); return (response == true) ? 'UPDATED' : response;}} />\r\n    ];\r\n    if(SCREENSAVER_BRIGHTNESS.setting == 'Scheduled') \r\n        LOCAL_SETTINGS.splice(2,0,\r\n            <SettingsBlank title='ScreenSaver Day Hour Start: (0-23/24)'\r\n                current={SCREENSAVER_BRIGHTNESS.dayHourStart}\r\n                verifyLevel={0}\r\n                onUpdate={(value, password)=>{const hour = parseInt(value);\r\n                    if(hour >=0 && hour <= 24) {dispatch({type: 'dayHourStart', payload: hour}); return true;} //24 is disabled\r\n                    else return false;}}/>,\r\n            <SettingsBlank title='ScreenSaver Day Opacity: (%)'\r\n                current={SCREENSAVER_BRIGHTNESS.dayOpacity*100}\r\n                verifyLevel={0}\r\n                onUpdate={(value, password)=>{const opacity = (parseInt(value)/100);\r\n                    if(opacity >=0 && opacity <= 1) {dispatch({type: 'dayOpacity', payload: opacity}); return true;}\r\n                    else return false;}}/>,  \r\n            <SettingsBlank title='ScreenSaver Night Hour Start: (0-23/24)'\r\n                current={SCREENSAVER_BRIGHTNESS.nightHourStart}\r\n                verifyLevel={0}\r\n                onUpdate={(value, password)=>{const hour = parseInt(value);\r\n                    if(hour >=0 && hour <= 24) {dispatch({type: 'nightHourStart', payload: hour}); return true;}\r\n                    else return false;}}/>,\r\n            <SettingsBlank title='ScreenSaver Night Opacity: (%)'\r\n                current={SCREENSAVER_BRIGHTNESS.nightOpacity*100}\r\n                verifyLevel={0}\r\n                onUpdate={(value, password)=>{const opacity = (parseInt(value)/100);\r\n                    if(opacity >=0 && opacity <= 1) {dispatch({type: 'nightOpacity', payload: opacity}); return true;}\r\n                    else return false;}}/>,  \r\n            <SettingsBlank title='ScreenSaver Black Hour Start: (0-23/24)'\r\n                current={SCREENSAVER_BRIGHTNESS.blackHourStart}\r\n                verifyLevel={0}\r\n                onUpdate={(value, password)=>{const hour = parseInt(value);\r\n                    if(hour >=0 && hour <= 24) {dispatch({type: 'blackHourStart', payload: hour}); return true;}\r\n                    else return false;}}/>            \r\n            );\r\n    \r\n    return((DATA == {} || DATA.CONTROLS == undefined) ? <div id='settings-container'>{LOCAL_SETTINGS}</div>\r\n    : <div id='settings-container'>\r\n        {LOCAL_SETTINGS}\r\n        <SettingsButton title='Evaluate Conditions' pendingText='EXECUTING'\r\n            onUpdate={async(password)=>{setTimeout(()=>fetchData(), 60000); return await put('/evaluate', {PASSWORD: password}, 'COMPLETE');}} />  \r\n        <SettingsBlank title='Postpone Next Evaluation: (ms)'\r\n            current={0}\r\n            numberStep={60000}\r\n            verifyLevel={1}\r\n            onUpdate={(value, password)=>post('/postpone-evaluation', {PASSWORD: password,\r\n                duration: value,\r\n            })}/>  \r\n        <SettingsList title='Status Email Recipients:'\r\n            dropListId='status-email'\r\n            current={DATA.emailStatusRecipients}\r\n            verifyLevel={1}\r\n            addCustom={true}\r\n            inputType='email'\r\n            onUpdate={(value, password)=>post('/set-settings', {PASSWORD: password,\r\n                tag: 'emailStatusRecipients',\r\n                emailStatusRecipients: value,\r\n            })}/> \r\n        <SettingsButton title='Send Update Email' pendingText='SENDING'\r\n            onUpdate={(password)=>put('/send-update-email', {PASSWORD: password}, 'SENT')}/>\r\n        <SettingsList title='Issue Email Recipients:'\r\n            dropListId='issue-email'\r\n            current={DATA.emailIssueRecipients}\r\n            addCustom={true}\r\n            inputType='email'\r\n            onUpdate={(value, password)=>post('/set-settings', {ADVANCED_PASSPHRASE: password,\r\n                tag: 'emailIssueRecipients',\r\n                emailIssueRecipients: value,\r\n            })}/> \r\n        <SettingsBlank title='Email Report:'\r\n            current={''}\r\n            inputType='textarea'\r\n            verifyLevel={1}\r\n            onUpdate={(value, password)=>post('/save-log', {PASSWORD: password, email: true,\r\n                message: value,\r\n            })}/> \r\n        <SettingsList title='Email Update Regularity:'\r\n            dropListId='email-update-regularity'\r\n            current={DATA.updateRegularity}\r\n            options={DATA.updateRegularityOptions}\r\n            onUpdate={(value, password)=>post('/set-settings', {ADVANCED_PASSPHRASE: password,\r\n                tag: 'updateRegularity',\r\n                updateRegularity: value,\r\n            })}/> \r\n        <SettingsList title='Allow Database Access:'\r\n            dropListId='allow-database'\r\n            current={DATA.accessDatabase}\r\n            options={[true, false]}\r\n            onUpdate={(value, password)=>post('/set-settings', {ADVANCED_PASSPHRASE: password,\r\n                tag: 'accessDatabase',\r\n                accessDatabase: value,\r\n            })}/>  \r\n        <SettingsBlank title='Evaluation Frequency: (m)'\r\n            current={DATA.evaluationFrequency/(60000)}\r\n            numberStep={1}\r\n            onUpdate={(value, password)=>post('/set-settings', {ADVANCED_PASSPHRASE: password,\r\n                tag: 'evaluationFrequency',\r\n                evaluationFrequency: (value*60000),\r\n            })}/> \r\n        <SettingsBlank title='Maximum Temperature: (c)'\r\n            current={DATA.maximumTemperature}\r\n            numberStep={0.5}\r\n            onUpdate={(value, password)=>post('/set-settings', {ADVANCED_PASSPHRASE: password,\r\n                tag: 'maximumTemperature',\r\n                maximumTemperature: value,\r\n            })}/> \r\n        <SettingsBlank title='Minimum Temperature: (c)'\r\n            current={DATA.minimumTemperature}\r\n            numberStep={0.5}\r\n            onUpdate={(value, password)=>post('/set-settings', {ADVANCED_PASSPHRASE: password,\r\n                tag: 'minimumTemperature',\r\n                minimumTemperature: value,\r\n            })}/> \r\n        <SettingsBlank title='Maximum Humidity: (%)'\r\n            current={DATA.maximumHumidity}\r\n            onUpdate={(value, password)=>post('/set-settings', {ADVANCED_PASSPHRASE: password,\r\n                tag: 'maximumHumidity',\r\n                maximumHumidity: value,\r\n            })}/> \r\n        <SettingsBlank title='Minimum Humidity: (%)'\r\n            current={DATA.minimumHumidity}\r\n            onUpdate={(value, password)=>post('/set-settings', {ADVANCED_PASSPHRASE: password,\r\n                tag: 'minimumHumidity',\r\n                minimumHumidity: value,\r\n            })}/> \r\n        <SettingsBlank title='Hour Day Starts: (h)'\r\n            current={DATA.dayHourStart}\r\n            onUpdate={(value, password)=>post('/set-settings', {ADVANCED_PASSPHRASE: password,\r\n                tag: 'dayHourStart',\r\n                dayHourStart: value,\r\n            })}/> \r\n        <SettingsBlank title='Hour Night Starts: (h)'\r\n            current={DATA.nightHourStart}\r\n            onUpdate={(value, password)=>post('/set-settings', {ADVANCED_PASSPHRASE: password,\r\n                tag: 'nightHourStart',\r\n                nightHourStart: value,\r\n            })}/> \r\n        <SettingsList title='Sensor Type:'\r\n            dropListId='sensor-type'\r\n            current={DATA.sensorType}\r\n            options={DATA.sensorTypes}\r\n            onUpdate={(value, password)=>post('/set-settings', {ADVANCED_PASSPHRASE: password,\r\n                tag: 'sensorType',\r\n                sensorType: value,\r\n            })}/>  \r\n        <SettingsList title='Sensor Mode:'\r\n            dropListId='sensor-mode'\r\n            current={DATA.sensorMode}\r\n            options={DATA.sensorModes}\r\n            onUpdate={(value, password)=>post('/set-settings', {ADVANCED_PASSPHRASE: password,\r\n                tag: 'sensorMode',\r\n                sensorMode: value,\r\n            })}/>\r\n        <SettingsButton title='Test Sensor' pendingText='Redirecting'\r\n            verifyLevel={0}\r\n            onUpdate={(password)=>routeHistory.push('/sensor-testing')} />\r\n        {DATA.CONTROLS.map((c,i)=><div key={`${c.id}-${i}`} ><SettingsBlank key={`name-${c.id}`} title={`[${c.id}] Control Name:`}\r\n                current={c.name}\r\n                onUpdate={(value, password)=>post('/set-settings', {ADVANCED_PASSPHRASE: password,\r\n                    tag: 'controls-name',\r\n                    id: c.id,\r\n                    name: value,\r\n                })}/> \r\n            <SettingsList key={`types-${c.id}`} title={`[${c.id}] Control Types:`}\r\n                dropListId={`control-types-${c}-${i}`}\r\n                current={c.types}\r\n                options={DATA.controlTypes}\r\n                selectMultiple={true}\r\n                addCustom={true}\r\n                onUpdate={(value, password)=>post('/set-settings', {ADVANCED_PASSPHRASE: password,\r\n                    tag: 'controls-types',\r\n                    id: c.id,\r\n                    types: value,\r\n                })}/></div>)}\r\n\r\n        <SettingsButton title='Reset Settings' pendingText='CONFIGURING'\r\n            verifyLevel={3}\r\n            onUpdate={async(password)=>{const result = await post('/reset-settings', {ADVANCED_PASSPHRASE: password}, 'RESETTING'); fetchData(); return result;}} />\r\n        <SettingsButton title='Reset File System' pendingText='CONFIGURING'\r\n            verifyLevel={3}\r\n            onUpdate={async(password)=>{const result = await post('/reset-file-system', {ADVANCED_PASSPHRASE: password}, 'RESETTING'); fetchData(); return result;}} />\r\n        <SettingsButton title='Terminate Server' pendingText='CONFIGURING'\r\n            verifyLevel={3}\r\n            onUpdate={(password)=>post('/terminate', {ADVANCED_PASSPHRASE: password}, 'TERMINATING')} />\r\n        <SettingsButton title='Restart PI' pendingText='CONFIGURING'\r\n            verifyLevel={3}\r\n            onUpdate={(password)=>post('/restart-pi', {ADVANCED_PASSPHRASE: password}, 'RESTARTING')} />\r\n        <SettingsButton title='Server Log' pendingText='Redirecting'\r\n            verifyLevel={0}\r\n            onUpdate={(password)=>routeHistory.push('/log')} />\r\n        <SettingsBlank title='Save to Log:'\r\n            current={''}\r\n            inputType='textarea'\r\n            verifyLevel={1}\r\n            onUpdate={(value, password)=>post('/save-log', {PASSWORD: password,\r\n                message: value,\r\n            })}/> \r\n        <SettingsButton title='Log Out' pendingText='CLEARING'\r\n            verifyLevel={0}\r\n            onUpdate={()=>{localStorage.clear(); return 'CLEARED PASSWORD'}} />\r\n\r\n    </div>);\r\n}\r\nexport default Settings;","import React, {useEffect, useState} from 'react';\r\nimport { useSelector} from 'react-redux';\r\nimport axios from 'axios';\r\nimport SettingsList from '../SettingsList';\r\nimport SettingsBlank from '../SettingsBlank';\r\nimport SettingsButton from '../SettingsButton';\r\n\r\n\r\nimport '../../index.css';\r\nimport '../Settings.css';\r\n\r\n\r\nconst SensorTest = (props) => {\r\n    const SERVER_URL = useSelector(root => root.serverURL);\r\n    const DATA = useSelector(root => root.data);\r\n    const [current, setCurrent] = useState('');\r\n    const [testingDuration, setTestingDuration] = useState(60000);\r\n    const [testingInterval, setTestingInterval] = useState(5000);\r\n    const [fetchingError, setFetchingError] = useState('');\r\n\r\n    let interval = null;\r\n    let timer = null;\r\n    const startTesting = () => { clearInterval(interval); clearTimeout(timer); setFetchingError('');\r\n        interval = setInterval(async()=>await axios.get(`${SERVER_URL}/sensor-test/`)\r\n                .then((response)=>{setCurrent(response.data); setFetchingError('');})\r\n                .catch((error)=>{console.log('Failed to Get Sensor Testing Data', error); setFetchingError(error);}), 500);\r\n        timer = setTimeout(()=>{clearInterval(interval); setFetchingError('');}, testingDuration+30000);\r\n        }\r\n    \r\n    return(<div id='sensor-test-container' >\r\n    <div className='sensor-test-first-header' >\r\n        {/* <section style={{gridColumn: 1, gridRow:1, width: '100%'}}> */}\r\n        <SettingsList title='Sensor Type:' \r\n            dropListId='sensor-testing-sensor-type'\r\n            current={DATA.sensorType}\r\n            options={DATA.sensorTypes}\r\n            condense={true}\r\n            onUpdate={async(value, password)=>await axios.get(`${SERVER_URL}/settings/`, {ADVANCED_PASSPHRASE: password,\r\n                tag: 'sensorType',\r\n                sensorType: value,\r\n            }).then((response)=>true)\r\n            .catch((error)=>error.response ? error.response.status : false)}/> \r\n        {/* </section><section style={{gridColumn: 3, gridRow:1, width: '100%'}}> */}\r\n        <SettingsBlank title='Test Duration: (m)'\r\n            current={testingDuration/60000}\r\n            condense={true}\r\n            verifyLevel={0}\r\n            onUpdate={(value, password)=>{const minutes = parseInt(value); if(!isNaN(minutes) && value == minutes && minutes > 0) {setTestingDuration(minutes*60000); return true;} else return false;}}/> \r\n        {/* </section><section style={{gridColumn: 4, gridRow:1, width: '100%'}}> */}\r\n        <SettingsBlank title='Test Interval: (s)'\r\n            current={testingInterval/1000}\r\n            condense={true}\r\n            verifyLevel={0}\r\n            onUpdate={(value, password)=>{const seconds = parseInt(value); if(!isNaN(seconds) && value == seconds && seconds > 0) {setTestingInterval(seconds*1000); return true;} else return false;}}/>\r\n            {/* </section> */}\r\n    </div><div className='sensor-test-second-header' >\r\n        <SettingsButton title={fetchingError == '' ? 'RESTART' : 'fetchingError'} pendingText='QUEUING'\r\n            buttonColor={fetchingError != '' ? 'darkred' : ''}\r\n            condense={true}\r\n            verifyLevel={2}\r\n            onUpdate={async(password)=>await axios.post(`${SERVER_URL}/sensor-test-restart/`, {ADVANCED_PASSPHRASE: password,\r\n                duration: testingDuration, interval: testingInterval,\r\n            }).then((response)=>{startTesting(); return 'INITIATING';})\r\n            .catch((error)=>error.response ? error.response.status : false)}\r\n            />\r\n        <SettingsButton title='UPDATE' pendingText='LOADING'\r\n            condense={true}\r\n            verifyLevel={0}\r\n            onUpdate={async(password)=>await axios.get(`${SERVER_URL}/sensor-test/`)\r\n                .then((response)=>{setCurrent(response.data); return 'CURRENT';})\r\n                .catch((error)=>error.response ? error.response.status : false)}\r\n            />\r\n    </div><div className='sensor-test-results'>\r\n        <table style={{margin: 0, width: '100%', border: 'none', borderSpacing: '4px'}}>\r\n            <tr>\r\n                <th style={{padding: '3px', textAlign: 'center'}} >Time</th>\r\n                <th style={{padding: '3px', textAlign: 'center'}} >Temperature</th>\r\n                <th style={{padding: '3px', textAlign: 'center'}} >Humidity</th>\r\n                <th style={{padding: '3px', textAlign: 'center'}} >Message</th>\r\n            </tr>\r\n            {current.split('\\n').map((p,i) => (p=='') ? <br key={`${p}-${current.length}`}/> : <tr key={`${p}-${current.length}`}> \r\n                {p.split('|').map((r, i) => <td key={`${r}-${p}-${current.length}`} style={{padding: '3px', textAlign: (i == 0) ? 'left' : 'center'}} colspan={((4 / p.split('|').length) > 1) ? Math.floor((4 / p.split('|').length)) : 1}>{r}</td>)}\r\n            </tr>)}\r\n\r\n        </table>\r\n    </div>\r\n    </div>);\r\n}\r\nexport default SensorTest;\r\n","import React, {useState,  useEffect} from 'react';\r\nimport { useSelector} from 'react-redux';\r\nimport axios from 'axios';\r\nimport SettingsButton from '../SettingsButton';\r\n\r\n\r\nimport '../../index.css';\r\nimport '../Settings.css';\r\n\r\n\r\nconst LogView = (props) => {\r\n    const SERVER_URL = useSelector(root => root.serverURL);\r\n    const [current, setCurrent] = useState('');\r\n    const [fileName, setFileName] = useState('');\r\n\r\n    const updateLog = async () => await axios.put(`${SERVER_URL}/log/`)\r\n        .then((response)=>{console.log(response); setCurrent(response.data); setFileName(response.headers['content-name']); return 'LOADING';})\r\n        .catch((error)=>error.response ? error.response.status : false);\r\n    useEffect(()=>updateLog(),[]);\r\n\r\n    \r\n    return(<div id='sensor-test-container' >\r\n        <SettingsButton title='UPDATE' pendingText='RETRIEVING'\r\n            condense={true}\r\n            verifyLevel={0}\r\n            onUpdate={async(password)=>await updateLog()}\r\n            />\r\n        <strong className='settings-value-title' style={{marginTop: '1.5rem'}}>File: {fileName}</strong>\r\n    <div className='sensor-test-results'>\r\n    {current.split(/(?=\\[\\d{1,2}-\\d{1,2}-\\d{4} \\d{1,2}:\\d{1,2}:\\d{1,2}])/g).reverse().map(entry=>entry.split(/\\n/g).map(p=><p style={{color:(/error|fail/i.test(p)) ? 'red' : (/\\[\\d{1,2}-\\d{1,2}-\\d{4} \\d{1,2}:\\d{1,2}:\\d{1,2}]/.test(p)) ? (/severe|high|low/i.test(p)) ? 'orangered' : (/restart/i.test(p)) ? 'goldenrod' : 'whitesmoke' : null}}>{p}</p>))}    </div>\r\n    {(fileName == undefined) ?  <div className='none no-size' style={{position:'absolute'}}></div> \r\n    : <SettingsButton title='PREVIOUS LOG' pendingText='SEARCHING'\r\n            condense={true}\r\n            verifyLevel={0}\r\n            onUpdate={async(password)=>await axios.put(`${SERVER_URL}/log/`, {fileName: fileName})\r\n                .then((response)=>{ setFileName(response.headers['content-name']); setCurrent(response.data); return 'LOADING';})\r\n                .catch((error)=>error.response ? error.response.status : false)}\r\n            />}\r\n    </div>);\r\n}\r\nexport default LogView;","import React, {useState, useEffect} from 'react';\r\nimport { useSelector} from 'react-redux';\r\nimport axios from 'axios';\r\nimport dateFormat from 'dateformat';\r\nimport SettingsButton from '../Settings/SettingsButton';\r\n\r\n\r\nimport '../index.css';\r\nimport './History.css';\r\n\r\n\r\nconst History = (props) => {\r\n    const SERVER_URL = useSelector(root => root.serverURL);\r\n    const DATA = useSelector(root => root.data);\r\n    const convertToFahrenheit = useSelector(root => root.convertToFahrenheit);\r\n    const [dayList, setDayList] = useState([]);\r\n    const [climate, setClimate] = useState([]);\r\n\r\n    const formatTemperature = (temp) => convertToFahrenheit ? (Math.round(((temp*(9/5)+32)) * 100) / 100) : temp;\r\n\r\n    const getTemperatureOff = (current = DATA.operatingTemperature, goal = DATA.goalTemperature) => (Math.abs(current - goal) < 1) ? <span></span> : <span>[<small>{current > goal ? '+' : '-'}</small>{Math.floor(Math.abs(current - goal))}<span>&#176;</span>]</span>;\r\n\r\n    const getHumidityOff = (current = DATA.operatingHumidity, goal = DATA.goalHumidity) => (Math.abs(current - goal) < 1) ? <span></span> : <span>[<small>{current > goal ? '+' : '-'}</small>{Math.floor(Math.abs(current - goal))}<small>%</small>]</span>;\r\n\r\n    const getEfficiency = (value, time, temperature = true) => {if(climate == undefined) return '-';\r\n        const hour = new Date(time).getHours(); \r\n        let current = undefined;  for(var i=0; i<climate.length; i++) { if(hour == climate[i].hour) { current = climate[i]; break;}}\r\n      return !current ? 0 : Math.floor((value/(temperature ? current.temperature : current.humidity)) * 100);\r\n    }\r\n    \r\n    const getDuration = (ms) => `${Math.floor(ms/60000)}:${Math.abs(ms)%60000<10000?'0':''}${Math.floor((Math.abs(ms)%60000)/1000)}`;\r\n    \r\n    const updateHistory = async() => {\r\n        axios.get(`${SERVER_URL}/data-climate/`).then((response) => { setClimate(response.data.climate);  console.log('CLIMATE', response.data);\r\n                    }).catch((error) => console.log('Failed to Fetch Climate Information', error));\r\n        return await axios.get(`${SERVER_URL}/data-history/`)\r\n                    .then((response)=>{setDayList(response.data);  console.log('HISTORY', response.data); return 'LOADING'})\r\n                    .catch((error)=>error.response ? error.response.status : false);;\r\n    }\r\n    useEffect(()=>updateHistory(),[]);\r\n    \r\n    return(<div id='history-container' >\r\n        <SettingsButton title='UPDATE' pendingText='RETRIEVING'\r\n            condense={true}\r\n            verifyLevel={0}\r\n            onUpdate={()=>updateHistory()}\r\n            />\r\n        <table style={{margin: 0, width: '100%', border: '2px solid #013214', color: 'white', borderSpacing: '4px'}}>\r\n        <tr>\r\n            <th style={{padding: '3px', fontWeight: 700,  fontFamily: `'New Tegomin', serif`, textAlign: 'center',}} >Time</th>\r\n            <th style={{padding: '3px', fontWeight: 700,  fontFamily: `'New Tegomin', serif`, textAlign: 'center',}} >Temperature</th>\r\n            <th style={{padding: '3px', fontWeight: 700,  fontFamily: `'New Tegomin', serif`, textAlign: 'center',}} >Humidity</th>\r\n            <th style={{padding: '3px', fontWeight: 700,  fontFamily: `'New Tegomin', serif`, textAlign: 'center',}} >Active</th>\r\n            <th style={{padding: '3px', fontWeight: 700,  fontFamily: `'New Tegomin', serif`, textAlign: 'center',}} >Inactive</th>\r\n        </tr>\r\n        {!(dayList && dayList.length) ? <tr><td style={{padding: '3px', textAlign: 'center' }} >No History Available</td></tr>\r\n            : dayList.map(r=><tr>\r\n                <td style={{padding: '3px', border: '0.05rem solid #013214', textAlign: 'center' }} >{dateFormat(r.time, ((new Date().getTime() - r.time)<(6*24*60*60*1000)) ? 'DDDD, H:MM' : 'mmm-d H:MM')}</td>\r\n                <td style={{padding: '3px', border: '0.05rem solid #013214', textAlign: 'center' }} >{formatTemperature(r.temperature)}{convertToFahrenheit ? <small>&#8457;</small> : <small>&#8451;</small>} {getTemperatureOff(formatTemperature(r.temperature), formatTemperature(r.goalTemperature))}</td>\r\n                <td style={{padding: '3px', border: '0.05rem solid #013214', textAlign: 'center' }} >{r.humidity}% {getHumidityOff(r.humidity, r.goalHumidity)}</td>\r\n                <td style={{padding: '3px', border: '0.05rem solid #013214', textAlign: 'center', fontSize: '0.7em' }} >{\r\n                    !r.active.length ? null : <table style={{margin: 0, width: '100%', borderSpacing: '2px' }}>\r\n                    {r.active.map(c=><tr>\r\n                            <td style={{textAlign: 'center' }} >{`${c.name}  [${c.settings[0].reason}]`}</td>\r\n                        </tr>)}\r\n                    </table>\r\n                }</td>\r\n                <td style={{padding: '3px', border: '0.05rem solid #013214', textAlign: 'center', fontSize: '0.7em' }} >{\r\n                    !r.active.length ? null : <table style={{margin: 0, width: '100%', borderSpacing: '2px' }}>\r\n                    {r.inactive.map(c=><tr>\r\n                            <td style={{textAlign: 'center' }} >{`${c.name}  [${c.settings[0].reason}]`}</td>\r\n                        </tr>)}\r\n                    </table>\r\n                }</td>\r\n            </tr>)}  \r\n        </table>\r\n    </div>);\r\n}\r\nexport default History;","import React, {useRef, useEffect} from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Readings from './Readings/Readings';\nimport Background from './Background/Background';\nimport ScreenSaver from './Background/ScreenSaver/ScreenSaver';\nimport Menu from './Menu/Menu';\nimport Control from './Control/Control';\nimport Schedule from './Control/Schedule/Schedule';\nimport Climate from './Climate/Climate';\nimport ErrorBar from './Readings/ErrorBar';\nimport Settings from './Settings/Settings';\nimport SensorTest from './Settings/Details/SensorTest';\nimport LogView from './Settings/Details/LogView';\n\n\nimport './App.css';\nimport History from './History/History';\n\n\nconst App = () => {\n\n  //ScreenSaver Detection\n  //https://stackoverflow.com/questions/37949981/call-child-method-from-parent\n  const screenSaverRef = useRef();\n  \n  const deactivateScreenSaver = () => { if(screenSaverRef.current) screenSaverRef.current.deactivateScreenSaver(); }\n  useEffect(() => window.addEventListener('scroll', deactivateScreenSaver, false), []); //https://stackoverflow.com/questions/5657292/why-is-false-used-after-this-simple-addeventlistener-function   \n\n  return (\n    <div id=\"App\" className=' border-box' \n    onClick={()=>screenSaverRef.current.deactivateScreenSaver()}\n    onMouseMove={()=>screenSaverRef.current.deactivateScreenSaver()}\n    onWheel={()=>screenSaverRef.current.deactivateScreenSaver()}\n    >\n    <Router>\n      <Background /> \n      {/* Screen saver toggle to not render and diable timer is reduct screenSaverBrightness.setting == 'Disabled' */}\n      <ScreenSaver ref={screenSaverRef}/>\n           \n      {/* <div id='page-box' className=' border-box' style={{ top: 0, padding: '1.0rem', height: `${menuRef.current ?  (window.innerHeight - (menuRef.current.offsetHeight) - 75) : window.innerHeight}px` }}>  */}\n       \n        <Switch>\n          <Route exact path=\"/\">\n          <div id='page-box' className=' border-box' style={{boxSizing: 'border-box'}}>\n            <Readings hideDetails={false}/>\n            <Menu />\n          </div>\n          </Route>\n          <Route path=\"/controls\">\n            <ErrorBar />\n            <div id='page-box' className=' border-box' style={{boxSizing: 'border-box'}}>\n              <Control/>\n              <Menu />\n            </div>\n          </Route>\n          <Route path=\"/schedules\">\n            <ErrorBar />\n            <div id='page-box' className=' border-box' style={{boxSizing: 'border-box'}}>\n              <Schedule/>\n              <Menu />\n            </div>\n          </Route>\n          <Route path=\"/climate\">\n            <ErrorBar />\n            <div id='page-box' className=' border-box' style={{boxSizing: 'border-box'}}>\n              <Climate/>\n              <Menu />\n            </div>\n          </Route>\n          <Route path=\"/history\">\n            <ErrorBar />\n            <div id='page-box' className=' border-box' style={{boxSizing: 'border-box'}}>\n              <History/>\n              <Menu />\n            </div>\n          </Route>\n          <Route path=\"/settings\">\n            <ErrorBar />\n            <div id='page-box' className=' border-box' style={{boxSizing: 'border-box'}}>\n              <Settings deactivateScreenSaver={(d)=>screenSaverRef.current.deactivateScreenSaver(d)}/>\n              <Menu />\n            </div>\n          </Route>\n          <Route path=\"/log\">\n            <ErrorBar />\n            <div id='page-box' className=' border-box' style={{boxSizing: 'border-box'}}>\n              <LogView/>\n              <Menu />\n            </div>\n          </Route>\n          <Route path=\"/sensor-testing\">\n            <ErrorBar />\n            <div id='page-box' className=' border-box' style={{boxSizing: 'border-box'}}>\n              <SensorTest/>\n              <Menu />\n            </div>\n          </Route>\n        </Switch>       \n\n    </Router>\n    </div>); //top layer last\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport axios from 'axios';\nimport{Provider} from 'react-redux';\nimport {createStore, combineReducers} from 'redux';\n\nimport defaultImage from './Background/terrarium-buddies.jpg';\n//MOCK DATA\nimport DATA from './Assets-Mock-Data/data.json';\n\n\n\n//Action Creators (manipulate State) => Doing in Component | Traditional Method is to predefine here and import into component, just to send back to reducer\n\n//Single State with one Reducer | Could all be separate with separate reducers and combine with: 'combineReducers'\n\n//Reducers : Perform state Update\nconst setServerURLReducer = (state = process.env.REACT_APP_SERVER_URL || '', action) => {\n  if(action.type == 'setServerURL')  return action.payload;\n  else return state;\n}\n\nconst initialImage = {\n  IMAGE_INTERVAL: 6000,\n  TRANSITION_INTERVAL: 1000,\n  SCREENSAVER_INACTIVE_TIME: 60000,\n  location: defaultImage,\n  isVisible: false,  // https://stackoverflow.com/questions/40064249/react-animate-mount-and-unmount-of-a-single-component\n}\nconst setImageReducer = (state = initialImage, action) => {\n  if(action.type == 'setImage') { return {...state, location: action.payload, isVisible: true};}\n  else if(action.type == 'setImageVisible') return {...state, isVisible: true};\n  else if(action.type == 'setImageInvisible') return {...state, isVisible: false};\n  else return state;\n}\nconst screenSaverActiveReducer = (state = true, action) => { //Image Opacity on/off -> transition css\n  if(action.type == 'activateScreenSaver')  return true; \n  else if(action.type == 'deactivateScreenSaver')  return false;\n  else return state;\n}\nconst initialScreenSaverBrightness = {\n  settingOptions: ['Default', 'Scheduled', 'Black', 'Disabled'],\n  setting: 'Default',\n  dayOpacity: 1.00,\n  dayHourStart: 7,\n  nightOpacity: 0.35,\n  nightHourStart: 19,\n  blackHourStart: 21,\n}\nconst ScreenSaverBrightnessReducer = (state = initialScreenSaverBrightness, action) => {\n  switch(action.type) {\n    case 'setting':\n      if(state.settingOptions.includes(action.payload)) return {...state, setting: action.payload};\n      else return state;\n    case 'dayOpacity':\n      return {...state, setting: 'Scheduled', dayOpacity: action.payload};\n    case 'dayHourStart':\n      return {...state, setting: 'Scheduled', dayHourStart: action.payload};\n    case 'nightOpacity':\n      return {...state, setting: 'Scheduled', nightOpacity: action.payload};\n    case 'nightHourStart':\n      return {...state, setting: 'Scheduled', nightHourStart: action.payload};\n    case 'blackHourStart':\n      return {...state, setting: 'Scheduled', blackHourStart: action.payload};\n    default: return state;\n  }\n}\nconst setDataReducer = (state = {}, action) => {\n  if(action.type == 'setData') return {...action.payload};\n  else return state;\n}\n\nconst toggleConvertToFahrenheitReducer = (state = true, action) => { \n  if(action.type == 'toggleConvertToFahrenheit') return !state; \n  else return state;\n}\n\nconst setDropListReducer = (state = 'OFF', action) => { \n  if(action.type == 'setDropList' && state == action.payload) return 'OFF';\n  else if(action.type == 'setDropList' && action.payload == undefined) return 'OFF';  \n  else if(action.type == 'setDropList') return action.payload; \n  else return state;\n}\n\n//Setup Store\nconst allStateDomains = combineReducers({\n  serverURL: setServerURLReducer,\n  image: setImageReducer,\n  isScreenSaverActive: screenSaverActiveReducer, \n  screenSaverBrightness: ScreenSaverBrightnessReducer,\n  data: setDataReducer,\n  convertToFahrenheit: toggleConvertToFahrenheitReducer,\n  dropListOpen: setDropListReducer\n});\n\nconst store = createStore(allStateDomains,{});\n\n\n//Fetch Image\n\n\n//Fetch Data\nexport const fetchData = async()=> { console.log(store.getState().serverURL);\n  DATA.timeLastReading = new Date().getTime()-(15*60*1000)+(45*1000);\n  DATA.timeNextEvaluation = new Date().getTime()+(60*1000);\n  store.dispatch({type: 'setData', payload: DATA});\n  return true;\n}\n\nconst start = async() => {\n  store.dispatch({type: 'setServerURL', payload: window.location.origin});\n  fetchData();\n    setTimeout(()=>{ console.log('INITIATING LOW HUMIDITY ERROR');\n      DATA.minimumHumidityErrorCode = 2;\n      DATA.operatingHumidity = DATA.minimumHumidity - 3.27;\n      DATA.operatingTemperature = DATA.operatingTemperature + 0.72;\n      DATA.statusMessage = \"Minimum Humidity Exceeded -> Responding accordingly by enabling \\'Humidify\\' and disabling \\'Dehumidify\\'\\nOperating with current conditions.\";\n      store.dispatch({type: 'setData', payload: DATA});\n    }, 60*1000);\n}\nstart();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n\n"],"sourceRoot":""}